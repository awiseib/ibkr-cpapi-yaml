openapi: 3.0.0
info:
  title: IBKR CPAPI
  description: Interactive Brokers RESTful API built around the Interactive Brokers Client Portal interface.
  version: 0.0.1
  
servers:
  # After hyphen, underlying descriptions should be equally indented to same level of indentation.
  - url: https://localhost:5000/v1/api
    description: Client Portal Gateway Base URL
  - url: https://localhost:5000/alpha/api
    description: >
      Client Portal Gateway Alpha Environment URL
      This requires the local bin/run.bat include '-conf conf.api.alpha.yaml' as a java argument.
      This also requires that conf.api.alpha.yaml is referenced instead of the standard conf.yaml.
  - url: https://api.ibkr.com/v1/api
    description: OAuth 1.0A Base URL.
  - url: https://api.ibkr.com/alpha/api
    description: OAuth 1.0A Alpha Environment Base URL. 
  - url: https://api.ibkr.com/tv/api
    description: TradingView Base URL.

paths:
  # Alerts
  /iserver/account/alert/{order_id}:
    get:
      tags:
        - Alerts
      summary: Get details of a specific alert
      description: Request details of a specific alert by providing the assigned order ID.
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
            example: "U1234567"
            description: Identifier for the unique account to retrieve information from. 
      responses:
        '200':
          description: An object containing all unique details of the specified alert.
          content: 
            application/json:
              schema:
                properties:
                  account:
                    type: string
                    description: Requestor’s account ID
                    example: 
                  order_id:
                    type: integer
                    description: Alert’s tracking ID. Can be used for modifying or deleting alerts.
                    example: 
                  alertName:
                    type: string
                    description: Human readable name of the alert.
                    example: 
                  tif:
                    type: string
                    description: Time in Force effective for the Alert
                    example: 
                  expire_time:
                    type: string
                    description: Returns the UTC formatted date used in GTD orders.
                    example: 
                  alert_active:
                    type: integer
                    description: Returns if the alert is active or disabled.
                    example: 
                  alert_repeatable:
                    type: integer
                    description: Returns if the alert can be sent more than once.
                    example: 
                  alert_email:
                    type: string
                    description: Returns the designated email address for sendMessage functionality.
                    example: 
                  alert_send_message:
                    type: integer
                    description: Returns whether or not the alert will send an email.
                    example: 
                  alert_message:
                    type: string
                    description: Returns the body content of what your alert will report once triggered
                    example: 
                  alert_show_popup:
                    type: integer
                    description: Returns whether or not the alert will trigger TWS Pop-up messages
                    example: 
                  alert_play_audio:
                    type: integer
                    description: Returns whether or not the alert will play audio
                    example: 
                  order_status:
                    type: string
                    description: Always returns “Presubmitted”.
                    example: 
                  alert_triggered:
                    type: integer
                    description: Returns whether or not the alert was triggered yet.
                    example: 
                  fg_color:
                    type: string
                    description: Always returns “#FFFFFF”. Can be ignored.
                    example: 
                  bg_color:
                    type: string
                    description: Always returns “#000000”. Can be ignored.
                    example: 
                  order_not_editable:
                    type: boolean
                    description: Returns if the order can be edited.
                    example: 
                  itws_orders_only:
                    type: integer
                    description: Returns whether or not the alert will trigger mobile notifications.
                    example: 
                  alert_mta_currency:
                    type: string
                    description: Returns currency set for MTA alerts. Only valid for alert type 8 & 9.
                    example: 
                  alert_mta_defaults:
                    type: string
                    description: Returns current MTA default values.
                    example: 
                  tool_id:
                    type: integer
                    description: Tracking ID for MTA alerts only. Returns ‘null’ for standard alerts.
                    example: 
                  time_zone:
                    type: string
                    description: Returned for time-specifc conditions.
                    example: 
                  alert_default_type:
                    type: integer
                    description: Returns default type set for alerts. Configured in Client Portal.
                    example: 
                  condition_size:
                    type: integer
                    description: Returns the total number of conditions in the alert.
                    example: 
                  condition_outside_rth:
                    type: integer
                    description: Returns whether or not the alert will trigger outside of regular trading hours.
                    example: 
                  conditions: 
                    type: array
                    description: Returns all conditions
                    items:
                      properties:
                        condition_type:
                          type: integer
                          description: Returns the type of condition set.
                          example: 1
                        conidex:
                          type: string
                          description: Returns full conidex in the format “conid@exchange”
                          example: "265598@ISLAND"
                        contract_description_1:
                          type: string
                          description: Includes relevant descriptions (if applicable).
                          example: "AAPL"
                        condition_operator:
                          type: string
                          description: Returns condition set for alert.
                          example: "<="
                        condition_trigger_method:
                          type: integer
                          description: Returns triggerMethod value set.
                          example: "0"
                        condition_value:
                          type: string
                          description: Returns value set.
                          example: "178.98"
                        condition_logic_bind:
                          type: boolean
                          description: Returns logic_bind value set.
                          example: "n"
                        condition_time_zone:
                          type: string
                          description: Returns timeZone value set.
                          example: null

  /iserver/account/mta:
    get:
      tags:
        - Alerts
      summary: Get MTA Alert
      description: >
        Retrieve information about your MTA alert.
        Each login user only has one mobile trading assistant (MTA) alert with it’s own unique tool id that cannot be changed.
        MTA alerts can not be created or deleted, only modified. When modified a new order Id is generated.
        See our <a href="https://www.ibkrguides.com/iphone/alerts.htm">Mobile Alert Guide</a> for more information on MTA alerts.
      responses:
        '200':
          description: The alert description for the unique MTA alert on the account.
          content: 
            application/json:
              schema:
                properties:
                  account:
                    type: string
                    description: Requestor’s account ID
                    example: "U1234567"
                  order_id:
                    type: integer
                    description: Alert’s tracking ID. Can be used for modifying or deleting alerts.
                    example: 9876543210
                  alertName:
                    type: string
                    description: Human readable name of the alert.
                    example: "AAPL Price"
                  tif:
                    type: string
                    description: Time in Force effective for the Alert
                    example: "GTD"
                  expire_time:
                    type: string
                    description: Returns the UTC formatted date used in GTD orders.
                    example: "20231231-12:00:00"
                  alert_active:
                    type: integer
                    description: Returns if the alert is active or disabled.
                    example: 1
                  alert_repeatable:
                    type: integer
                    description: Returns if the alert can be sent more than once.
                    example: 0
                  alert_email:
                    type: string
                    description: Returns the designated email address for sendMessage functionality.
                    example: null
                  alert_send_message:
                    type: integer
                    description: Returns whether or not the alert will send an email.
                    example: 0
                  alert_message:
                    type: string
                    description: Returns the body content of what your alert will report once triggered
                    example: "MTA TEST!"
                  alert_show_popup:
                    type: integer
                    description: Returns whether or not the alert will trigger TWS Pop-up messages
                    example: 0
                  alert_play_audio:
                    type: integer
                    description: Returns whether or not the alert will play audio
                    example: null
                  order_status:
                    type: string
                    description: Always returns “Presubmitted”.
                    example: "“Presubmitted”"
                  alert_triggered:
                    type: integer
                    description: Returns whether or not the alert was triggered yet.
                    example: 0
                  fg_color:
                    type: string
                    description: Always returns “#FFFFFF”. Can be ignored.
                    example: "#FFFFFF"
                  bg_color:
                    type: string
                    description: Always returns “#000000”. Can be ignored.
                    example: #000000
                  order_not_editable:
                    type: boolean
                    description: Returns if the order can be edited.
                    example: false
                  itws_orders_only:
                    type: integer
                    description: Returns whether or not the alert will trigger mobile notifications.
                    example: 0
                  alert_mta_currency:
                    type: string
                    description: Returns currency set for MTA alerts. Only valid for alert type 8 & 9.
                    example: "USD"
                  alert_mta_defaults:
                    type: string
                    description: Returns current MTA default values.
                    example: "9:STATE=1,MIN=-43275000,MAX=43275000,STEP=500,DEF_MIN=-4327500,DEF_MAX=4327500|8:STATE=0,MIN=-15,MAX=15,STEP=0.5,DEF_MIN=-2,DEF_MAX=2|7:STATE=1,MIN=-5,MAX=5,STEP=0.5,DEF_MIN=-2,DEF_MAX=2|4:STATE=1,MIN=1,MAX=50,STEP=1,DEF_VAL=10|5:STATE=0"
                  tool_id:
                    type: integer
                    description: Tracking ID for MTA alerts only. Returns ‘null’ for standard alerts.
                    example: 55834574848
                  time_zone:
                    type: string
                    description: Returned for time-specifc conditions.
                    example: null
                  alert_default_type:
                    type: integer
                    description: Returns default type set for alerts. Configured in Client Portal.
                    example: null
                  condition_size:
                    type: integer
                    description: Returns the total number of conditions in the alert.
                    example: 0
                  condition_outside_rth:
                    type: integer
                    description: Returns whether or not the alert will trigger outside of regular trading hours.
                    example: 0
                  conditions: 
                    type: array
                    description: Returns all conditions.
                    items:
                      properties:
                        condition_type:
                          type: integer
                          description: Returns the type of condition set.
                          example: 9
                        conidex:
                          type: string
                          description: Returns full conidex in the format “conid@exchange”
                          example: "265598@ISLAND"
                        contract_description_1:
                          type: string
                          description: Includes relevant descriptions (if applicable).
                          example: "AAPL"
                        condition_operator:
                          type: string
                          description: Returns condition set for alert.
                          example: "<="
                        condition_trigger_method:
                          type: integer
                          description: Returns triggerMethod value set.
                          example: "0"
                        condition_value:
                          type: string
                          description: Returns value set.
                          example: "178.98"
                        condition_logic_bind:
                          type: boolean
                          description: Returns logic_bind value set.
                          example: "n"
                        condition_time_zone:
                          type: string
                          description: Returns timeZone value set.
                          example: null

  /iserver/account/{accountId}/alert/activate:
      post:
        tags:
          - Alerts
        summary: Activate or deactivate an alert
        description: Activate or Deactivate existing alerts created for this account. This does not delete alerts, but disables notifications until reactivated.
        parameters:
          - in: path
            name: accountId
            schema:
              type: string
              example: U1234567
            required: true
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  alertId:
                    type: integer
                    description: The alertId, or order_id, received from order creation or the list of alerts.
                    example: 9876543210
                  alertActive:
                    type: integer
                    description: Set whether or not the alert should be active (1) or inactive (0).
                    example: 1
                required:
                  - alertId
                  - alertActive
        responses:
          '200':
              description: An object containing details about the modified alert.
              content: 
                application/json:
                  schema:
                    properties:
                      request_id:
                        type: integer
                        example: null
                      order_id:
                        type: integer
                        example: 9876543210
                        description: >
                          The tracking number of the alert.
                          Occasssionally referenced as the alertId or alert_id.
                      success:
                        type: boolean
                        description: Displays result status of alert request
                      text:
                        type: string
                        example: "Request was submitted"
                        description: Response message to clarify success status reason.
                      failure_list:
                        type: string
                        description: If “success” returns false, will list failed order Ids
                        example: null

  /iserver/account/{accountId}/alert/{alertId}:
      delete:
        tags:
          - Alerts
        summary: Delete an alert
        description: Permanently delete an existing alert. Deleting an MTA alert will reset it to the default state.
        parameters:
          - in: path
            name: accountId
            schema:
              type: string
              example: U1234567
            required: true
          - in: path
            name: alertId
            schema:
              type: string
              description: order_id returned from the original alert creation, or from the list of available alerts.
              example: "9876543210"
            required: true
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
        responses:
          '200':
              description: An object containing details on the deleted endpoint.
              content: 
                application/json:
                  schema:
                    properties:
                      request_id:
                        type: integer
                        example: null
                      order_id:
                        type: integer
                        example: 9876543210
                        description: >
                          The tracking number of the alert.
                          Occasssionally referenced as the alertId or alert_id.
                      success:
                        type: boolean
                        description: Displays result status of alert request
                      text:
                        type: string
                        example: "Request was submitted"
                        description: Response message to clarify success status reason.
                      failure_list:
                        type: string
                        description: If “success” returns false, will list failed order Ids
                        example: null

  /iserver/account/{accountId}/alert:
    post:
      tags:
        - Alerts
      summary: Create or Modify Alert
      description: Endpoint used to create a new alert, or modify an existing alert.
      parameters:
        - in: path
          name: accountId
          schema:
            type: string
            example: U1234567
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                alertName:
                  type: string
                  description: Identifier for the unique account to retrieve information from.
                  example: "AAPL_Price"
                alertMessage:
                  type: string
                  description: The body content of what your alert will report once triggered
                  example: "AAPL Price Drop!"
                alertRepeatable:
                  type: integer
                  description: Boolean number (0, 1) signifies if an alert can be triggered more than once. A value of ‘1’ is required for MTA alerts
                  example: 0
                email:
                  type: string
                  description: "user@domain.net"
                  example: Email address you want to send email alerts to
                expireTime:
                  type: string
                  description: Used with a tif of “GTD” only. Signifies time when the alert should terminate if no alert is triggered.
                  example: "20231231-12:00:00"
                iTWSOrdersOnly:
                  type: integer
                  description: Boolean number (0, 1) to allow alerts to trigger alerts through the mobile app
                  example: 0
                outsideRth:
                  type: integer
                  description: Boolean number (0, 1) to allow the alert to trigger outside of regular trading
                  example: 0
                sendMessage:
                  type: integer
                  description: Boolean number (0, 1) to allow alerts to trigger email messages
                  example: 0
                showPopup:
                  type: integer
                  description: Boolean number (0, 1) to allow alerts to trigger TWS Pop-up messages
                  example: 0
                tif: 
                  type: string
                  description: "Time in Force duration of alert. Allowed: [“GTC”, “GTD”]"
                  example: "GTD"
                conditions:
                  type: array
                  description: Container for all conditions applied for an alert to trigger.
                  items:
                    properties:
                      conidex:
                        type: string
                        description: Concatenation of conid and exchange. Formatted as “conid@exchange”
                        example: “265598@SMART”
                      logicBind:
                        type: string
                        description: >
                          Describes how multiple conditions should behave together.
                          Available logic types:
                            * `a` - AND
                            * `o` - OR
                            * `n` - END
                        default: "a"
                        enum: ["a", "o", "n"]
                      operator:
                        type: string
                        description: Indicates whether the trigger should be above or below the given value.
                        example: ">="
                      timeZone:
                        type: string
                        description: Only needed for some MTA alert condition.
                        example: "US/Eastern"
                      triggerMethod:
                        type: integer
                        description: Pass the string representation of zero, “0”
                        example: "0"
                      "type":
                        type: integer
                        description: >
                          Designate what condition type to use. Note the "MTA" types listed are only supported if iTWSOrdersOnly=1
                          Available condition types:
                            * `1` - Price
                            * `3` - Time
                            * `4` - Margin
                            * `5` - Trade
                            * `6` - Volume
                            * `7` - MTA Market
                            * `8` - MTA Postion
                            * `9` - MTA Account Daily PnL
                        example: 1
                      "value":
                        type: string
                        description: Trigger value based on Type.
                        default: "*"
                    required:
                      - conidex
                      - logicBind
                      - operator
                      - triggerMethod
                      - type
                      - value
              required:
                - alertName
                - alertMessage
                - alertRepeatable
                - outsideRth
                - tif
                - conditions
      responses:
        '200':
            description: An object containing valid accounts and the account properties regarding trading access. This endpoint is also used to confirm account validation. 
            content: 
              application/json:
                schema:
                  properties:
                    request_id:
                      type: integer
                      example: null
                    order_id:
                      type: integer
                      example: 9876543210
                      description: >
                        The tracking number of the alert.
                        Occasssionally referenced as the alertId or alert_id.
                    success:
                      type: boolean
                      description: Displays result status of alert request
                    text:
                      type: string
                      example: "Submitted"
                      description: Response message to clarify success status reason.
                    order_status:
                      type: string
                      description: Returns ‘null’
                      example: null
                    warning_message:
                      type: string
                      description: Returns ‘null’
                      example: null

  /iserver/account/{accountId}/alerts:
    get:
      tags:
        - Alerts
      summary: Get a list of available alerts
      description: Retrieve a list of all alerts attached to the provided account.
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
            example: "U1234567"
            description: Identifier for the unique account to retrieve information from. 
      responses:
        '200':
          description: An array of objects detailing contract information.
          content: 
            application/json:
              schema:
                type: array
                uniqueItems: true
                items:
                  description: An array containing all alerts as separate objects.
                  properties:
                    order_id:
                      type: integer
                      description: The searchable order ID
                      example: 9876543210
                    account:
                      type: string
                      description: The account the alert was attributed to.
                      example: "U1234567"
                    alert_name:
                      type: string
                      description: The requested name for the alert.
                      example: "AAPL Price"
                    alert_active:
                      type: integer
                      description: Determines if the alert is active or not
                      example: 1
                    order_time:
                      type: string
                      description: UTC-formatted time of the alert’s creation.
                      example: "20231211-18:55:35"
                    alert_triggered:
                      type: boolean
                      description: Confirms if the order is is triggered or not.
                      example: false
                    alert_repeatable:
                      type: integer
                      description: Confirms if the alert is enabled to occur more than once.
                      example: 0

  # Accounts
  /acesws/{accountId}/signatures-and-owners:
    get:
      tags:
        - Accounts
      summary: Signatures and Owners
      description: Receive a list of all applicant names on the account and for which account and entity is represented.
      parameters:
        - in: path
          name: accountId
          schema:
            type: string
            description: Pass the account identifier to receive information for.
            example: U1234567
          required: true
      responses:
        '200':
            description: An object containing valid accounts and the account properties regarding trading access. This endpoint is also used to confirm account validation. 
            content: 
              application/json:
                schema:
                  properties:
                    accountId:
                      example: "U1234567"
                      type: string
                      description: An accessible accountId
                    users:
                      type: array
                      description: Returns all usernames and their information affiliated with the account.
                      items:
                        properties:
                          roleId:
                            type: string
                          hasRightCodeInd:
                            type: string
                          userName:
                            type: string
                          entity:
                            type: object
                            description: Provides information about the particular entity.
                            properties:
                              firstName:
                                type: string
                                example: John
                                description: Returns the first name of the user.
                              lastName:
                                type: string
                                example: Smith
                                description: Returns the last name of the user.
                              entityType:
                                type: string
                                enum:
                                  - INDIVIDUAL
                                  - Joint
                                  - ORG
                                description: Returns the type of entity assigned to the user.
                              entityName:
                                type: string
                                example: John Smith
                                description: Returns the full entity’s name, concatenating the first and last name fields.
                    applicant:
                      description: Provides information about the individual listed for the account.
                      properties:
                        signatures:
                          description: Returns all names attached to the account.
                          type: array
                          items:
                            example: John Smith

  /iserver/account/{accountId}/summary:
      get:
        tags:
        - Accounts
        summary: General Account Summary
        description: Provides a general overview of the account details such as balance values.
        parameters:
          - in: path
            name: accountId
            schema:
              type: string
              description: Pass the account identifier to receive information for.
              example: U1234567
            required: true
        responses:
          '200':
            description: Successful return contianing an array of at-a-glance account details.
            content: 
              application/json:
                schema:
                  properties:
                    accountType:
                      type: string
                      example: ""
                      description: Describes the unique account type. For standard individual accounts, an empty string is returned.
                    status:
                      type: string
                      example: ""
                      description: If the account is currently non-tradeable, a status message will be dispalyed.
                    balance:
                      type: integer
                      example: 253416.0
                      description: Returns the total account balance.
                    SMA:
                      type: integer
                      example: 0.0
                      description: Simple Moving Average of the account.
                    buyingPower:
                      type: integer
                      example: 253416.0
                      description: Total buying power available for the account.
                    availableFunds:
                      type: integer
                      example: 253416.0
                      description: "The amount of equity you have available for trading. For both the Securities and Commodities segments, this is calculated as: Equity with Loan Value – Initial Margin."
                    excessLiquidity:
                      type: integer
                      example: 253416.0
                      description: The amount of cash in excess of the usual requirement in your account. 
                    netLiquidationValue:
                      type: integer
                      example: 592416.0
                      description: The basis for determining the price of the assets in your account.
                    equityWithLoanValue:
                      type: integer
                      example: 592416.0
                      description: The basis for determining whether you have the necessary assets to either initiate or maintain security assets.
                    regTLoan:
                      type: integer
                      example: 0.0
                      description: The Federal Reserve Board regulation governing the amount of credit that broker dealers may extend to clients who borrow money to buy securities on margin.
                    securitiesGVP:
                      type: integer
                      example: 2300.0
                      description: Absolute value of the Long Stock Value + Short Stock Value + Long Option Value + Short Option Value + Fund Value.
                    totalCashValue:
                      type: integer
                      example: 592416.0
                      description: >
                        Cash recognized at the time of trade + futures P&L. This value reflects real-time currency positions, including:
                         *  Trades executed directly through the FX market.
                         *  Trades executed as a result of automatic IB conversions, which occur when you trade a product in a non-base currency.
                         *  Trades deliberately executed to close non-base currency positions using the FXCONV destination.
                    accruedInterest:
                      type: integer
                      example: 0.0
                      description: Accrued interest is the interest accruing on a security since the previous coupon date. If a security is sold between two payment dates, the buyer usually compensates the seller for the interest accrued, either within the price or as a separate payment.
                    regTMargin:
                      type: integer
                      example: 0.0
                      description: The initial margin requirements calculated under US Regulation T rules for both the securities and commodities segment of your account.
                    initialMargin:
                      type: integer
                      example: 1060615.0
                      description: The available initial margin for the account.
                    maintenanceMargin:
                      type: integer
                      example: 592416.0
                      description: The available maintenance margin for the account.
                    cashBalances:
                      description: An array containing balance information for all currencies held by the account.
                      items:
                        properties:
                          currency:
                            type: string
                            example: AUD
                            description: >
                              The currency the values represent.
                              Base currency represented as "Total (in {BaseCurrency})"
                          balance:
                            type: integer
                            example: 210708.0
                            description: The total available currency held in the account.
                          settledCash:
                            type: integer
                            example: 210708.0
                            description: The available settled cash that can be withdrawn from the account.

  /iserver/account/{accountId}/summary/available_funds:
    get:
      tags:
      - Accounts
      summary: Summary of Available Funds
      description: Provides a summary specific for avilable funds giving more depth than the standard /summary endpoint.
      parameters:
        - in: path
          name: accountId
          schema:
            type: string
            description: Pass the account identifier to receive information for.
            example: U1234567
          required: true
      responses:
        '200':
          description: Indicates a successful return of available funds.
          content:
            application/json:
              schema:
                properties:
                  total:
                    type: object
                    description: Contains a combined overview of Commidity and Security fund values.
                    properties:
                      current_available:
                        type: string
                        example: "215,117,339 USD"
                        description: Describes currently avialable funds in your account for trading.
                      current_excess:
                        type: string
                        example: "215,584,781 USD"
                        description: Describes total value of the account.
                      Prdctd Pst-xpry Excss:
                        type: string
                        example: "0 USD"
                        description: Displays predicted post-expiration account value.
                      Lk Ahd Avlbl Fnds:
                        type: string
                        example: "214,921,585 USD"
                        description: This value reflects your available funds at the next margin change.
                      Lk Ahd Excss Lqdty:
                        type: string
                        example: "215,567,237 USD"
                        description: >
                          * `Securities` - Equity with loan value. Look ahead maintenance margin.
                           * `Commodities` - Net Liquidation value. Look ahead maintenance margin.
                      overnight_available:
                        type: string
                        example: "214,921,585 USD"
                        description: Describes available funds for overnight trading.
                      overnight_excess:
                        type: string
                        example: "215,567,237 USD"
                        description: >
                          Overnight refers to the window of time after the local market trading day is closed. 
                            * `Securities` - Equivalent to regular trading hours. 
                             * `Commodities` - Commodities Net Liquidation value. Overnight Maintenance margin.
                      buying_power:
                        type: string
                        example: "1,436,887,744 USD"
                        description: Describes the total buying power of the account including existing balance with margin.
                      leverage:
                        type: string
                        example: "n/a"
                        description: Describes the total combined leverage.
                      Lk Ahd Nxt Chng:
                        type: string
                        example: "@ 16:00:00"
                        description: Describes when the next 'Look Ahead' calculation will take place.
                      day_trades_left:
                        type: string
                        example: "Unlimited"
                        description: Describes the number of trades remaining before flagging the Pattern Day Trader status. "Unlimited" is used for existing Pattern Day Traders.
                        
                  commodities:
                    type: object
                    description: Contains commodities specific fund values.
                    properties:
                      current_available:
                        type: string
                        example: "215,117,339 USD"
                        description: Describes currently avialable funds in your account for trading.
                      current_excess:
                        type: string
                        example: "215,584,781 USD"
                        description: Describes total value of the account.
                      Prdctd Pst-xpry Excss:
                        type: string
                        example: "0 USD"
                        description: Displays predicted post-expiration account value.
                      Lk Ahd Avlbl Fnds:
                        type: string
                        example: "214,921,585 USD"
                        description: This value reflects your available funds at the next margin change.
                      overnight_available:
                        type: string
                        example: "214,921,585 USD"
                        description: Describes available funds for overnight trading.
                      overnight_excess:
                        type: string
                        example: "215,567,237 USD"
                        description: >
                          Overnight refers to the window of time after the local market trading day is closed. 
                            * `Securities` - Equivalent to regular trading hours. 
                             * `Commodities` - Commodities Net Liquidation value. Overnight Maintenance margin.
                  securities:
                    type: object
                    description: Contains an overview of Security specific fund values.
                    properties:
                      current_available:
                        type: string
                        example: "215,117,339 USD"
                        description: Describes currently avialable funds in your account for trading.
                      current_excess:
                        type: string
                        example: "215,584,781 USD"
                        description: Describes total value of the account.
                      Prdctd Pst-xpry Excss:
                        type: string
                        example: "0 USD"
                        description: Displays predicted post-expiration account value.
                      Lk Ahd Avlbl Fnds:
                        type: string
                        example: "214,921,585 USD"
                        description: This value reflects your available funds at the next margin change.
                      Lk Ahd Excss Lqdty:
                        type: string
                        example: "215,567,237 USD"
                        description: >
                          * `Securities` - Equity with loan value. Look ahead maintenance margin.
                           * `Commodities` - Net Liquidation value. Look ahead maintenance margin.
                      overnight_available:
                        type: string
                        example: "214,921,585 USD"
                        description: Describes available funds for overnight trading.
                      overnight_excess:
                        type: string
                        example: "215,567,237 USD"
                        description: >
                          Overnight refers to the window of time after the local market trading day is closed. 
                            * `Securities` - Equivalent to regular trading hours. 
                             * `Commodities` - Commodities Net Liquidation value. Overnight Maintenance margin.
                      leverage:
                        type: string
                        example: "n/a"
                        description: Describes the total combined leverage.
            
  /iserver/account/{accountId}/summary/balances:
    get:
      tags:
      - Accounts
      summary: Summary of Account Balances
      parameters:
        - in: path
          name: accountId
          schema:
            type: string
            description: Pass the account identifier to receive information for.
            example: U1234567
          required: true
      responses:
        '200':
          description: Indicates a successful return of available funds.
          content:
            application/json:
              schema:
                properties:
                  total: 
                    type: object
                    description: Contains total balance details for the account.
                    properties: 
                      net_liquidation: 
                        type: string
                        example: "216,791,746 USD"
                        description: The basis for determining the price of the assets in your account.
                      "Nt Lqdtn Uncrtnty": 
                        type: string
                        example: "296 USD"
                        description: Displays the uncertainty of the Net Liquidating Value associated with after-hours price changes.
                      equity_with_loan: 
                        type: string
                        example: "215,962,132 USD"
                        description: >
                          * `Cash Accounts` Settled cash
                           * `Margin Accounts` Total cash value + stock value + bond value + fund value + European & Asian options value.
                      "Prvs Dy Eqty Wth Ln Vl": 
                        type: string
                        example: "191,348,083 USD"
                        description: The accounts equity balance including loan value.
                      sec_gross_pos_val: 
                        type: string
                        example: "1,923,059 USD"
                        description: Equals the sum of the absolute value of all positions except cash, index futures and US treasuries.
                      cash: 
                        type: string
                        example: "214,170,200 USD"
                        description: Total cash balance in the account
                      "MTD Interest": 
                        type: string
                        example: "787,931 USD"
                        description: Total Month-to-date interest.
                      "Pndng Dbt Crd Chrgs": 
                        type: string
                        example: "0 USD"
                        description: Any pending charges for the IBKR debit account.
                      
                  commodities: 
                    type: object
                    description: Contains Commodity-specific balance details.
                    properties: 
                      net_liquidation: 
                        type: string
                        example: "24,696,943 USD"
                        description: The basis for determining the price of the assets in your account.
                      equity_with_loan: 
                        type: string
                        example: "24,655,654 USD"
                        description: >
                          * `Cash Accounts` Settled cash
                           * `Margin Accounts` Total cash value + stock value + bond value + fund value + European & Asian options value.
                      cash: 
                        type: string
                        example: "24,696,943 USD"
                        description: Total cash balance in the account
                      "MTD Interest": 
                        type: string
                        example: "0 USD"
                        description: Total Month-to-date interest.
                      "Pndng Dbt Crd Chrgs": 
                        type: string
                        example: "0 USD"
                        description: Any pending charges for the IBKR debit account.
                  
                  securities: 
                    type: object
                    description: Contains Security-specific balance details.
                    properties: 
                      net_liquidation: 
                        type: string
                        example: "192,094,803 USD"
                        description: The basis for determining the price of the assets in your account.
                      equity_with_loan: 
                        type: string
                        example: "191,306,479 USD"
                        description: >
                          * `Cash Accounts` Settled cash
                           * `Margin Accounts` Total cash value + stock value + bond value + fund value + European & Asian options value.
                      Prvs Dy Eqty Wth Ln Vl: 
                        type: string
                        example: "191,348,083 USD"
                        description: The accounts equity balance including loan value.
                      sec_gross_pos_val: 
                        type: string
                        example: "1,923,059 USD"
                        description: Equals the sum of the absolute value of all positions except cash, index futures and US treasuries.
                      cash: 
                        type: string
                        example: "189,473,257 USD"
                        description: Total cash balance in the account
                      MTD Interest: 
                        type: string
                        example: "787,931 USD"
                        description: Total Month-to-date interest.
                      Pndng Dbt Crd Chrgs: 
                        type: string
                        example: "0 USD"
                        description: Any pending charges for the IBKR debit account.
  
  /iserver/account/{accountId}/summary/margins:
    get:
      tags:
      - Accounts
      summary: Summary of Account Margin
      parameters:
        - in: path
          name: accountId
          schema:
            type: string
            description: Pass the account identifier to receive information for.
            example: U1234567
          required: true
      responses:
        '200':
          description: Indicates a success request to receive margin balance values.
          content:
            application/json:
              schema:
                properties:
                  total:
                    properties:
                      current_initial: 
                        type: string
                        example: "1,012,700 USD"
                        description: The minimum amount required to open a new position.
                      Prdctd Pst-xpry Mrgn @ Opn: 
                        type: string
                        example: "0 USD"
                        description: Provides a projected “at expiration” margin value based on the soon-to-expire contracts in your portfolio. 
                      current_maint: 
                        type: string
                        example: "558,038 USD"
                        description: The amount of equity required to maintain your positions.
                      projected_liquidity_inital_margin: 
                        type: string
                        example: "1,203,131 USD"
                        description: Provides a projected "liquid" initial margin value based on account liquidation value.
                      Prjctd Lk Ahd Mntnnc Mrgn: 
                        type: string
                        example: "575,757 USD"
                        description: >
                          If it is 3:00 pm ET, the next calculation you’re looking ahead to is after the close, or the Overnight Initial Margin. If it’s 3:00 am ET, the next calculation will be at the market’s open.
                           * `Securities` – Projected maintenance margin requirement as of next period’s margin change, in the base currency of the account. 
                           * `Commodities` – Maintenance margin requirement as of next period’s margin change in the base currency of the account based on current margin requirements, which are subject to change. This value depends on when you are viewing your margin requirements. 
                      projected_overnight_initial_margin: 
                        type: string
                        example: "1,203,131 USD"
                        description: >
                          Overnight refers to the window of time after the local market trading day is closed. 
                            * Securities – Projected overnight initial margin requirement in the base currency of the account. 
                            * Commodities – Overnight initial margin requirement in the base currency of the account based on current margin requirements, which are subject to change.
                      Prjctd Ovrnght Mntnnc Mrgn: 
                        type: string
                        example: "575,757 USD"
                        description: >
                          Overnight refers to the window of time after the local market trading day is closed. 
                            * `Securities` – Projected overnight maintenance margin requirement in the base currency of the account. 
                            * `Commodities` – Overnight maintenance margin requirement in the base currency of the account based on current margin requirements, which are subject to change.
                  commodities:
                    properties:
                      current_initial: 
                        type: string
                        example: "444,340 USD"
                        description: The minimum amount required to open a new position.
                      Prdctd Pst-xpry Mrgn @ Opn: 
                        type: string
                        example: "0 USD"
                        description: Provides a projected “at expiration” margin value based on the soon-to-expire contracts in your portfolio. 
                      current_maint: 
                        type: string
                        example: "41,343 USD"
                        description: The amount of equity required to maintain your positions.
                      projected_liquidity_inital_margin: 
                        type: string
                        example: "634,771 USD"
                        description: Provides a projected "liquid" initial margin value based on account liquidation value.
                      Prjctd Lk Ahd Mntnnc Mrgn: 
                        type: string
                        example: "59,061 USD"
                        description: >
                          If it is 3:00 pm ET, the next calculation you’re looking ahead to is after the close, or the Overnight Initial Margin. If it’s 3:00 am ET, the next calculation will be at the market’s open.
                           * `Securities` – Projected maintenance margin requirement as of next period’s margin change, in the base currency of the account. 
                           * `Commodities` – Maintenance margin requirement as of next period’s margin change in the base currency of the account based on current margin requirements, which are subject to change. This value depends on when you are viewing your margin requirements. 
                      projected_overnight_initial_margin: 
                        type: string
                        example: "634,771 USD"
                        description: >
                          Overnight refers to the window of time after the local market trading day is closed. 
                            * Securities – Projected overnight initial margin requirement in the base currency of the account. 
                            * Commodities – Overnight initial margin requirement in the base currency of the account based on current margin requirements, which are subject to change.
                      Prjctd Ovrnght Mntnnc Mrgn: 
                        type: string
                        example: "59,061 USD"
                        description: >
                          Overnight refers to the window of time after the local market trading day is closed. 
                            * `Securities` – Projected overnight maintenance margin requirement in the base currency of the account. 
                            * `Commodities` – Overnight maintenance margin requirement in the base currency of the account based on current margin requirements, which are subject to change.
                  securities:
                    properties:
                      current_initial: 
                        type: string
                        example: "568,360 USD"
                        description: The minimum amount required to open a new position.
                      Prdctd Pst-xpry Mrgn @ Opn: 
                        type: string
                        example: "0 USD"
                        description: Provides a projected “at expiration” margin value based on the soon-to-expire contracts in your portfolio. 
                      current_maint: 
                        type: string
                        example: "516,695 USD"
                        description: The amount of equity required to maintain your positions.
                      projected_liquidity_inital_margin: 
                        type: string
                        example: "568,360 USD"
                        description: Provides a projected "liquid" initial margin value based on account liquidation value.
                      Prjctd Lk Ahd Mntnnc Mrgn: 
                        type: string
                        example: "516,695 USD"
                        description: >
                          If it is 3:00 pm ET, the next calculation you’re looking ahead to is after the close, or the Overnight Initial Margin. If it’s 3:00 am ET, the next calculation will be at the market’s open.
                           * `Securities` – Projected maintenance margin requirement as of next period’s margin change, in the base currency of the account. 
                           * `Commodities` – Maintenance margin requirement as of next period’s margin change in the base currency of the account based on current margin requirements, which are subject to change. This value depends on when you are viewing your margin requirements. 
                      projected_overnight_initial_margin: 
                        type: string
                        example: "568,360 USD"
                        description: >
                          Overnight refers to the window of time after the local market trading day is closed. 
                            * Securities – Projected overnight initial margin requirement in the base currency of the account. 
                            * Commodities – Overnight initial margin requirement in the base currency of the account based on current margin requirements, which are subject to change.
                      Prjctd Ovrnght Mntnnc Mrgn: 
                        type: string
                        example: "516,695 USD"
                        description: >
                          Overnight refers to the window of time after the local market trading day is closed. 
                            * `Securities` – Projected overnight maintenance margin requirement in the base currency of the account. 
                            * `Commodities` – Overnight maintenance margin requirement in the base currency of the account based on current margin requirements, which are subject to change.

  /iserver/account/{accountId}/summary/market_value:
    get:
      tags:
      - Accounts
      summary: Summary of Account's Market Value
      parameters:
        - in: path
          name: accountId
          schema:
            type: string
            description: Pass the account identifier to receive information for.
            example: U1234567
          required: true
      responses:
        '200':
          description: Indicates a successful market value request.
          content:
            application/json:
              schema:
                properties:
                  currency:
                    type: object
                    description: Returns an object containing market value details of the currency and positions held using that currency.
                    properties:
                      total_cash:
                        type: string
                        example: "213,833,399"
                        description: Lists the total cash held for the given currency.
                      settled_cash:
                        type: string
                        example: "213,833,399"
                        description: Cash recognized at the time of settlement minus the purchases at time of trade, commissions, taxes, and fees.
                      MTD Interest:
                        type: string
                        example: "812,385"
                        description: Total Month-to-date interest.
                      stock:
                        type: string
                        example: "1,757,293"
                        description: Total cash value of stocks held.
                      options:
                        type: string
                        example: "98,351"
                        description: Total cash value of options held.
                      futures:
                        type: string
                        example: "1,657"
                        description: Total cash value of futures held.
                      future_options:
                        type: string
                        example: "0"
                        description: Total cash value of future options held.
                      funds:
                        type: string
                        example: "0"
                        description: Total cash value of funds held.
                      dividends_receivable:
                        type: string
                        example: "0"
                        description: Total cash value of receivable dividends.
                      mutual_funds:
                        type: string
                        example: "0"
                        description: Total cash value of mutual funds held.
                      money_market:
                        type: string
                        example: "0"
                        description: Total cash value of money market securities held.
                      bonds:
                        type: string
                        example: "0"
                        description: Total cash value of bonds held.
                      Govt Bonds:
                        type: string
                        example: "0"
                        description: Total cash value of goverment bonds held.
                      t_bills:
                        type: string
                        example: "0"
                        description: Total cash value of t-bill bonds held.
                      warrants:
                        type: string
                        example: "0"
                        description: Total cash value of warrants held.
                      issuer_option:
                        type: string
                        example: "0"
                        description: Total cash value of issuer options held.
                      commodity:
                        type: string
                        example: "0"
                        description: Total cash value of commodities held.
                      Notional CFD:
                        type: string
                        example: "0"
                        description: Total cash value of notional CFDs held.
                      cfd:
                        type: string
                        example: "0"
                        description: Total cash value of CFDs held.
                      net_liquidation:
                        type: string
                        example: "216,500,885"
                        description: Total cash value of your net liquidty.
                      unrealized_pnl:
                        type: string
                        example: "-165,482"
                        description: Total daily unrealized profit and loss.
                      realized_pnl:
                        type: string
                        example: "0"
                        description: Total daily realized profit and loss.
                      Exchange Rate:
                        type: string
                        example: "1.00"
                        description: Exchange rate of the labeled currency to the base currency.

  /iserver/account/pnl/partitioned:
      get:
        tags:
        - Accounts
        summary: Account Profit and Loss
        responses:
          '200':
            description: Refers to “updated PnL”. Holds a json object of key-value paired pnl details. 
            content: 
              application/json:
                schema:
                  properties:
                    upnl:
                      type: object
                      description: Refers to the U accounts PnL. This does reference Realized Profit and Loss.
                      properties:
                        "U1234567.Core":
                          type: object
                          description: The account or model's Profit and Loss. 
                          properties:
                            rowType:
                              type: integer
                              description: Returns the positional value of the returned account. Always returns 1 for individual accounts.
                              example: 1
                            dpl:
                              type: integer
                              description: Daily PnL for the specified account profile.
                              example: 15.7
                            nl:
                              type: integer
                              description: Net Liquidity for the specified account profile.
                              example: 10000.0
                            upl:
                              type: integer
                              description: Unrealized PnL for the specified account profile.
                              example: 607.0
                            el:
                              type: integer
                              description: Excess Liquidity for the specified account profile.
                              example: 10000.0
                            mv:
                              type: integer
                              description: Margin value for the specified account profile.
                              example: 0.0
  
  /iserver/account/search/{searchPattern}:
      get:
        tags:
        - Accounts
        summary: Search Dynamic Account
        description: >
          Returns a list of accounts matching a query pattern set in the request.
          Broker accounts configured with the DYNACCT property will not receive account information at login. Instead, they must dynamically query then set their account number.
          Customers without the DYNACCT property will receive a 503 error. 
        parameters:
          - in: path
            name: searchPattern
            schema:
              type: string
              description: The pattern used to describe credentials to search for. Including part of part of an account ID will return the full value.
              example: U123
            required: true

        responses:
          '200':
            description: Returns all accounts that match the searchPattern string.
            content: 
              application/json:
                schema:
                  properties:
                    matchedAccounts:
                      type: array
                      description: Contains a series of objects that pertain to the account information requested.
                      items:
                        properties:
                          accountId:
                            type: string
                            description: Returns a matching account ID that corresponds to the matching value.
                            example: "U1234567"
                          alias:
                            type: string
                            description: Returns the corresponding alias or alternative name for the specific account ID. May be a duplicate of the accountId value in most cases.
                            example: "Example_Alias"
                          allocationId:
                            type: string
                            description: Returns the allocation identifier used internally for the account.
                            example: "1"
                    pattern:
                      type: string
                      description: Displays the searchPattern used for the request.
                      example: "U123"

  /iserver/account:
    post:
      tags:
        - Accounts
      summary: Switch Account
      description: >
        Switch the active account for how you request data.
        Only available for financial advisors and multi-account structures.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                acctId:
                  example: "U1234567"
                  description: Identifier for the unique account to retrieve information from.
                  type: string
      responses:
        '200':
          description: Validates the account swapped to.
          content:
            application/json:
              schema:
                type: object
                properties:
                  set:
                    type: boolean
                    description: Confirms that the account change was set
                  acctId:
                    type: string
                    example: U1234567
                    description: Confirms the account switched to.

  /iserver/accounts:
      get:
        tags:
        - Session
        - Accounts
        summary: Receive brokerage accounts for the current user.
        description: Returns a list of accounts the user has trading access to, their respective aliases and the currently selected account. Note this endpoint must be called before modifying an order or querying open orders.
        responses:
          '200':
            description: An object containing valid accounts and the account properties regarding trading access. This endpoint is also used to confirm account validation. 
            content: 
              application/json:
                schema:
                  properties:
                    accounts:
                      type: array
                      description: Returns an array of all accessible accountIds.
                      items:
                        example: "U1234567"
                        type: string
                        description: An accessible accountId 
                    acctProps:
                      type: object
                      description: Returns an json object for each accessible account’s properties.
                      properties:
                        U1234567:
                          type: object
                          properties:
                            hasChildAccounts:
                              type: boolean
                            supportsCashQty:
                              type: boolean
                            noFXConv: 
                              type: boolean
                            isProp: 
                              type: boolean
                            supportsFractions:
                              type: boolean
                            allowCustomerTime:
                              type: boolean
                    aliases:
                      type: object
                      properties:
                        "U1234567": 
                          type: string
                          example: "Example_Alias"
                    allowFeatures:
                      type: object
                      properties:
                        showGFIS: 
                          type: boolean
                        showEUCostReport: 
                          type: boolean
                        allowEventContract:
                          type: boolean
                        allowFXConv:
                          type: boolean
                        allowFinancialLens:
                          type: boolean
                        allowMTA:
                          type: boolean
                        allowTypeAhead: 
                          type: boolean
                        allowEventTrading: 
                          type: boolean
                        snapshotRefreshTimeout: 
                          type: integer
                          format: int64
                          example: 30
                        liteUser: 
                          type: boolean
                        showWebNews: 
                          type: boolean
                        research:
                          type: boolean
                        debugPnl:
                          type: boolean
                        showTaxOpt:
                          type: boolean
                        showImpactDashboard:
                          type: boolean
                        allowDynAccount:
                          type: boolean
                        allowCrypto:
                          type: boolean
                        allowedAssetTypes: 
                          type: string
                          example: "STK,OPT,FUT,CASH,CRYPTO"
                    chartPeriods:
                      type: object
                      properties:
                        "STK":
                          type: array
                          items:
                            example: "*"
                        "CFD":
                          type: array
                          items:
                            example: "*"
                        "OPT":
                          type: array
                          items:
                            example: ["2h","1d","2d","1w","1m"]
                        "FOP":
                          type: array
                          items:
                            example: ["2h","1d","2d","1w","1m"]
                        "WAR":
                          type: array
                          items:
                            example: "*"
                        "IOPT":
                          type: array
                          items:
                            example: "*"
                        "FUT":
                          type: array
                          items:
                            example: "*"
                        "CASH":
                          type: array
                          items:
                            example: "*"
                        "IND":
                          type: array
                          items:
                            example: "*"
                        "BOND":
                          type: array
                          items:
                            example: "*"
                        "FUND":
                          type: array
                          items:
                            example: "*"
                        "CMDTY":
                          type: array
                          items:
                            example: "*"
                        "PHYSS":
                          type: array
                          items:
                            example: "*"
                        "CRYPTO":
                          type: array
                          items:
                            example: "*"
                    groups:
                      type: array
                    profiles:
                      type: array
                    selectedAccount:
                      type: string
                      example: "U1235467"
                    serverInfo:
                      type: object
                      properties:
                        serverName:
                          type: string
                          example: "JifN10037"
                        serverVersion:
                          type: string
                          example: "Build 10.26.1j, Jan 3, 2024 2:11:43 PM"
                    sessionId:
                      type: string
                      example: "659ce14f.0000000a"
                    isFt:
                      type: boolean
                    isPaper:
                      type: boolean
  
  /iserver/dynaccount:
    post:
      tags:
      - Accounts
      summary: Set Dynamic Account
      description: Set the active dynamic account.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                acctId:
                  type: string
                  example: "U1234567"
                  description: The account ID that should be set for future requests.
              required:
                - acctId
      responses:
        '200':
          description: An array of objects detailing contract information.
          content: 
            application/json:
              schema:
                type: object
                properties:
                  set:
                    type: boolean
                    description: Confirms if the account change was fully set.
                  acctId:
                    type: string
                    example: "U123567"
                    description: The account ID specified in the request body.

  # Contracts       
  /iserver/contract/rules:
    post:
      tags:
      - Contracts
      summary: Search Contract Rules
      description: Returns trading related rules for a specific contract and side.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                conid:
                  type: integer
                  description: Contract identifier for the interested contract.
                isBuy:
                  type: boolean
                  description: Side of the market rules apply too. Set to true for Buy Orders, set to false for Sell orders.
                  default: true
                modifyOrder:
                  type: boolean
                  description: Used to find trading rules related to an existing order.
                  default: false
                orderId:
                  type: integer
                  description: Specify the order identifier used for tracking a given order.
      responses:
        '200':
          description: An array of objects detailing contract information.
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/contractRules'

  /iserver/contract/{conid}/algos:
      get:
        tags:
        - Contracts
        summary: Search Algo Params by Contract ID
        description: Returns supported IB Algos for contract. A pre-flight request must be submitted before retrieving information
        parameters:
          - in: path
            name: conid
            required: true
            schema:
              example: "265598"
              description: Contract identifier for the requested contract of interest.
          - in: query
            name: algos
            schema:
              example: "Adaptive;Vwap"
              description: >
                List of algo ids delimited by “;” to filter by.
                Max of 8 algos ids can be specified.
                Case sensitive to algo id.
          - in: query
            name: addDescription
            schema:
              example: 1
              default: 0
              description: Whether or not to add algo descriptions to response. Set to 1 for yes, 0 for no.
          - in: query
            name: addParams
            schema:
              example: 1
              default: 0
              description: Whether or not to show algo parameters. Set to 1 for yes, 0 for no.
        responses:
          '200':
            description: Returns a list of available algos and a description of their behavior.
            content: 
              application/json:
                schema:
                  properties:
                    accounts:
                      type: array
                      description: Contains all relevant algos for the contract.
                      items:
                        properties:
                          name:
                            type: string
                            example: "Adaptive"
                            description: Common name of the algo
                          id: 
                            type: string
                            example: "Adaptive"
                            description: Algo identifier used for requests.
                          "parameters":
                            type: array
                            items:
                              properties:
                                guiRank:
                                  type: integer
                                  example: 
                                  description: Positional ranking for the algo. Used for Client Portal.

                                defaultValue:
                                  type: integer
                                  example: 
                                  description: Default parameter value.

                                name:
                                  type: integer
                                  example: 
                                  description: Parameter name.

                                id:
                                  type: integer
                                  example: 
                                  description: Parameter identifier for the algo.

                                legalStrings:
                                  type: array
                                  example: ["Urgent", "Normal", "Patient"]
                                  description: Allowed values for the parameter.

                                required:
                                  type: integer
                                  example: 
                                  description: States whether the parameter is required for the given algo order to place.

                                valueClassName:
                                  type: integer
                                  example: 
                                  description: Returns the variable type of the parameter.

  /iserver/contract/{conid}/info:
      get:
        tags:
        - Contracts
        summary: Contract information by Contract ID
        description: Requests full contract details for the given conid.
        parameters:
          - in: path
            name: conid
            required: true
            schema:
              example: "265598"
              description: Contract identifier for the requested contract of interest.
        responses:
          '200':
            description: Returns a list of available algos and a description of their behavior.
            content: 
              application/json:
                schema:
                  $ref: '#/components/schemas/contractRules'

  /iserver/contract/{conid}/info-and-rules:
    get:
        tags:
        - Contracts
        summary: Contract information by Contract ID
        description: Requests full contract details for the given conid.
        parameters:
          - in: path
            name: conid
            required: true
            schema:
              example: "265598"
              description: Contract identifier for the requested contract of interest.
        responses:
          '200':
            description: Returns a list of available algos and a description of their behavior.
            content: 
              application/json:
                schema:
                  allOf:
                    - $ref: '#/components/schemas/contractInfo'
                    - properties:
                        "rules":
                          $ref: '#/components/schemas/contractRules'

  /iserver/currency/pairs:
      get:
        tags:
        - Contracts
        summary: Search Algo Params by Contract ID
        description: Obtains available currency pairs corresponding to the given target currency.
        parameters:
          - in: query
            name: currency
            required: true
            schema:
              example: "USD"
              description: Specify the target currency you would like to receive official pairs of.
        responses:
          '200':
            description: Returns a list of valid forex pairs for the given currency. The currency can apply as both the target or base currency. 
            content: 
              application/json:
                schema:
                  properties:
                    {currency}:
                      type: array
                      description: As opposed to an undefined return, the currency symbol will be listed.
                      items:
                        properties:
                          symbol:
                            type: string
                            example: "EUR.USD"
                            description: The official symbol of the given currency pair.
                          conid: 
                            type: integer
                            example: 12087792
                            description: The official contract identifier of the given currency pair.
                          ccyPair:
                            type: integer
                            example: "EUR"
                            description: Returns the symbol counterpart.

  /iserver/exchangerate:
      get:
        tags:
        - Contracts
        summary: Currency Exchange Rate
        description: Obtains the exchange rates of the currency pair.
        parameters:
          - in: query
            name: target
            required: true
            schema:
              example: "EUR"
              description: Specify the quote currency to request data for.
          - in: query
            name: source
            required: true
            schema:
              example: "USD"
              description: Specify the base currency to request data for.
        responses:
          '200':
            description: Successful requests return the currency exchange rate of the target currency value divided by the source currency.
            content: 
              application/json:
                schema:
                  properties:
                    rate:
                      type: integer
                      example: 0.92042894
                      description: Returns the exchange rate for the currency pair.

  /iserver/secdef/bond-filters:
      get:
        tags:
        - Contracts
        summary: Search Bond Filter Information
        description: Request a list of filters relating to a given Bond issuerID. The issuerId is retrieved from /iserver/secdef/search and can be used in /iserver/secdef/info?issuerId={issuerId} for retrieving conIds.
        parameters:
          - in: query
            name: symbol
            required: true
            schema:
              example: "BOND"
              description: This should always be set to “BOND”
          - in: query
            name: issueId
            required: true
            schema:
              example: "e1400715"
              description: Specifies the issuerId value used to designate the bond issuer type.
        responses:
          '200':
            description: Successful requests return the currency exchange rate of the target currency value divided by the source currency.
            content: 
              application/json:
                schema:
                  properties:
                    bondFilters:
                      type: array
                      description: Contains all filters pertaining to the given issuerId.
                      items:
                        properties:
                          displayText:
                            type: string
                            example: Maturity Date
                            description: An identifier used to document returned options/values. This can be thought of as a key value.
                          columnId:
                            type: integer
                            example: 27
                            description: Used for user interfaces. Internal use only.
                          options:
                            type: array
                            description: Contains all objects with values corresponding to the parent displayText key.
                            items:
                              properties:
                                text:
                                  type: string
                                  example: Jan 2025
                                  description: In some instances, a text value will be returned, which indicates the standardized value format such as plaintext dates, rather than solely numerical values.
                                value:
                                  type: string
                                  example: 202501
                                  description: Returns value directly correlating to the displayText key. This may include exchange, maturity date, issue date, coupon, or currency.

  /iserver/secdef/info:
      get:
        tags:
        - Contracts
        summary: Search Bond Filter Information
        description: Request a list of filters relating to a given Bond issuerID. The issuerId is retrieved from /iserver/secdef/search and can be used in /iserver/secdef/info?issuerId={issuerId} for retrieving conIds.
        parameters:
          - in: query
            name: conid
            required: true
            schema:
              example: "265598"
              description: Contract identifier of the underlying. May also pass the final derivative conid directly.
          - in: query
            name: sectype
            required: true
            schema:
              example: 
              description: Security type of the requested contract of interest.
          - in: query
            name: month
            schema:
              example: 
              description: Expiration month for the given derivative.
          - in: query
            name: exchange
            schema:
              example: 
              description: Designate the exchange you wish to receive information for in relation to the contract.
          - in: query
            name: strike
            schema:
              example: 
              description: Set the strike price for the requested contract details
          - in: query
            name: right
            schema:
              enum: ["C", "P"] 
              description: >
                Set the right for the given contract.
                * `C` - for Call options.
                * `P` - for Put options.
          - in: query
            name: issuerId
            schema:
              example: “e1234567”
              description: Set the issuerId for the given bond issuer type.
        responses:
          '200':
            description: Successful response containing a contract's security definition.
            content: 
              application/json:
                schema:
                  properties:
                    conid:
                      type: integer
                      example: 609545163
                      description: Contract Identifier of the given contract.
                    ticker: 
                      type: string
                      example: "ES"
                      description: Ticker symbol for the given contract
                    secType:
                      type: string
                      example: "FOP"
                      description: Security type for the given contract.
                    listingExchange:
                      type: string
                      example: null
                      description: Primary listing exchange for the given contract.
                    exchange:
                      type: string
                      example: "CME"
                      description: Exchange requesting data for.
                    companyName:
                      type: string
                      example: "E-mini S&P 500"
                      description: Name of the company for the given contract.
                    currency: 
                      type: string
                      example: "USD"
                      description: Traded currency allowed for the given contract.
                    validExchanges: 
                      type: string
                      example: "CME"
                      description: Series of all valid exchanges the contract can be traded on in a single comma-separated string.
                    priceRendering: 
                      default: "null"
                    maturityDate: 
                      type: string
                      example: "20240216"
                      description: Date of expiration for the given contract.
                    right:
                      type: string
                      enum: ["P", "C"]
                      description: >
                        Set the right for the given contract.
                        * `C` - for Call options.
                        * `P` - for Put options.
                    strike: 
                      type: integer
                      example: 4900.0
                      description: Returns the given strike value for the given contract.
  
  /iserver/secdef/search:
    get:
      # Tags allow us to categorize requests, as shown in REDOC directly.
      tags:
      - Contracts
      summary: Returns a list of contracts based on symbol.
      description: Returns a list of contracts based on the search symbol provided as a query param. 
      parameters:
      # Specify param type, including query, path, or body params.
      - in: query
        name: symbol
        required: true
        schema:
          type: string
          example: AAPL
          description: The ticker symbol, bond issuer type, or company name of the equity you are looking to trade.
      - in: query
        name: secType
        required: false
        schema:
          type: string
          default: STK
          enum: [STK, IND, BOND]
        # Bullet points are indicated by the original indent, a space, the asterisk, then another space. 
        # The back tick formats the topic, while information after the hyphen denotes description.
        description: >
          Available underlying security types:
            * `STK` - Represents an underlying as a Stock security type.
            * `IND` - Represents an underlying as an Index security type.
            * `BOND` - Represents an underlying as a Bond security type.
      - in: query
        name: name
        required: false
        schema:
          type: boolean
          description: Denotes if the symbol value is the ticker symbol or part of the company's name. 
      responses:
        '200':
          description: An array of objects detailing contract information.
          content: 
            application/json:
              schema:
                type: array
                uniqueItems: true
                items:
                  $ref: '#/components/schemas/secdefSearch'

    post:
      tags:
      - Contracts
      summary: Returns a list of contracts based on symbol.
      description: Returns a list of contracts based on the search symbol provided as a query param. 
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                symbol:
                  type: string
                  example: AAPL
                  description: The ticker symbol, bond issuer type, or company name of the equity you are looking to trade.
                secType:
                  type: string
                  default: STK
                  enum: [STK, IND, BOND]
                  description: >
                    Available underlying security types:
                      * `STK` - Represents an underlying as a Stock security type.
                      * `IND` - Represents an underlying as an Index security type.
                      * `BOND` - Represents an underlying as a Bond security type.
                name:
                  type: boolean
                  description: Denotes if the symbol value is the ticker symbol or part of the company's name.
              required:
                - symbol
      responses:
        '200':
          description: An array of objects detailing contract information.
          content: 
            application/json:
              schema:
                type: array
                uniqueItems: true
                items:
                  $ref: '#/components/schemas/secdefSearch'

  /iserver/secdef/strikes:
    get:
      tags:
      - Contracts
      summary: Search Bond Filter Information
      description: Request a list of filters relating to a given Bond issuerID. The issuerId is retrieved from /iserver/secdef/search and can be used in /iserver/secdef/info?issuerId={issuerId} for retrieving conIds.
      parameters:
        - in: query
          name: conid
          required: true
          schema:
            example: "265598"
            description: Contract identifier of the underlying. May also pass the final derivative conid directly.
        - in: query
          name: sectype
          required: true
          schema:
            example: OPT
            description: Security type of the requested contract of interest.
        - in: query
          name: month
          required: true
          schema:
            example: JAN24
            description: Expiration month for the given derivative.
        - in: query
          name: exchange
          schema:
            example: NASDAQ
            default: SMART
            description: Exchange from which derivatives should be retrieved from.
      responses:
        '200':
          description: Successful response containing a contract's security definition.
          content: 
            application/json:
              schema:
                properties:
                  call:
                    type: array
                    example: [185.0,190.0,195.0,200.0]
                    description: Array containing a series of comma separated values representing potential call strikes for the instrument.
                  put:
                    type: array
                    example: [185.0,190.0,195.0,200.0]
                    description: Array containing a series of comma separated values representing potential put strikes for the instrument.
                    
  /trsrv/all-conids:
    get:
      tags:
      - Contracts
      summary: All Conids by Exchange
      description: Send out a request to retrieve all contracts made available on a requested exchange. This returns all contracts that are tradable on the exchange, even those that are not using the exchange as their primary listing.
      parameters:
        - in: query
          name: exchange
          required: true
          schema:
            example: AMEX
            description: Exchange from which derivatives should be retrieved from.
      responses:
        '200':
          description: Successful response containing a contract's security definition.
          content: 
            application/json:
              schema:
                type: array
                items:
                  properties:
                    ticker:
                      type: string
                      example: "BMO"
                      description: Returns the ticker symbol of the contract.
                    conid:
                      type: integer
                      example: 5094
                      description: Returns the contract identifier of the returned contract.
                    exchange:
                      type: string
                      example: "NYSE"
                      description: Returns the primary exchange of the returned contract.
                    
  /trsrv/futures:
    get:
      tags:
      - Contracts
      summary: Future  Security Definition By Symbol
      description: Returns a list of non-expired future contracts for given symbol(s)
      parameters:
        - in: query
          name: symbols
          required: true
          schema:
            example: ES,MES
            description: Indicate the symbol(s) of the underlier you are trying to retrieve futures on. Accepts comma delimited string of symbols.
      responses:
        '200':
          description: Successful response containing a contract's security definition.
          content: 
            application/json:
              schema:
                properties:
                  {symbol}: 
                    type: array
                    description: >
                      Displayed as the string of your symbol
                      Contains a series of objects for each symbol that matches the requested.
                    items:
                      properties:
                        symbol:
                          type: string
                          example: ES
                          description: The requested symbol value.
                        conid:
                          type: integer
                          example: 495512552
                          description: Contract identifier for the specific symbol
                        underlyingConid:
                          type: integer
                          example: 11004968
                          description: Contract identifier for the future’s underlying contract.
                        expirationDate:
                          type: integer
                          example: 20231215
                          description: Expiration date of the specific future contract.
                        ltd:
                          type: integer
                          example: 20231214
                          description: Last trade date of the future contract.
                        shortFuturesCutOff:
                          type: integer
                          example: 20231214
                          description: Represents the final day for contract rollover for shorted futures.
                        longFuturesCutOff:
                          type: integer
                          example: 20231214
                          description: Represents the final day for contract rollover for long futures.
  
  /trsrv/secdef:
    get:
      tags:
      - Contracts
      summary: Search the security definition by Contract ID
      description: Returns a list of security definitions for the given conids.
      parameters:
        - in: query
          name: conids
          required: true
          schema:
            example: 265598,8314
            description: A comma separated series of contract IDs.
      responses:
        '200':
          description: Successful response containing a contract's security definition.
          content: 
            application/json:
              schema:
                properties:
                  secdef: 
                    type: array
                    description: Returns matching security definitions for the conid.
                    items:
                      properties:
                        conid: 
                          type: integer
                          example: 265598
                          description: Returns the conID
                        currency: 
                          type: string
                          example: "USD"
                          description: Returns the traded currency for the contract.
                        time: 
                          type: integer
                          example: 28
                          description: Returns amount of time in ms to generate the data.
                        chineseName: 
                          type: string
                          example: "&#x82F9;&#x679C;&#x516C;&#x53F8;"
                          description: Returns the Chinese characters for the symbol.
                        allExchanges: 
                          type: string
                          example: "AMEX,NYSE,CBOE,PHLX,CHX,ARCA,ISLAND,ISE,IDEAL,NASDAQQ,NASDAQ,DRCTEDGE,BEX,BATS,NITEECN,EDGEA,CSFBALGO,JEFFALGO,NYSENASD,PSX,BYX,ITG,PDQ,IBKRATS,CITADEL,NYSEDARK,MIAX,IBDARK,CITADELDP,NASDDARK,IEX,WEDBUSH,SUMMER,WINSLOW,FINRA,LIQITG,UBSDARK,BTIG,VIRTU,JEFF,OPCO,COWEN,DBK,JPMC,EDGX,JANE,NEEDHAM,FRACSHARE,RBCALGO,VIRTUDP,BAYCREST,FOXRIVER,MND,NITEEXST,PEARL,GSDARK,NITERTL,NYSENAT,IEXMID,HRT,FLOWTRADE,HRTDP,JANELP,PEAK6,IMCDP,CTDLZERO,HRTMID,JANEZERO,HRTEXST,IMCLP,LTSE,SOCGENDP,MEMX,INTELCROS,VIRTUBYIN,JUMPTRADE,NITEZERO,TPLUS1,XTXEXST,XTXDP,XTXMID,COWENLP,BARCDP,JUMPLP,OLDMCLP,RBCCMALP,WALLBETH,IBEOS,JONES,GSLP,BLUEOCEAN,USIBSILP,OVERNIGHT,JANEMID,IBATSEOS,HRTZERO,VIRTUALGO,VIRTUMID"
                          description: Returns a series of exchanges the given symbol can trade on.
                        listingExchange: 
                          type: string
                          example: NASDAQ
                          description: Returns the primary or listing exchange the contract is hosted on.
                        countryCode: 
                          type: string
                          example: US
                          description: Returns the country code the contract is traded on.
                        name: 
                          type: string
                          example: "APPLE INC"
                          description: Returns the comapny name.
                        assetClass: 
                          type: string
                          example: STK
                          description: Returns the asset class or security type of the contract.
                        expiry: 
                          type: string
                          example: null
                          description: Returns the expiry of the contract. Returns null for non-expiry instruments.
                        lastTradingDay: 
                          type: string
                          example: null
                          description: Returns the last trading day of the contract.
                        group: 
                          type: string
                          example: Computers
                          description: Returns the group or industry the contract is affilated with.
                        putOrCall: 
                          type: string
                          example: null
                          description: Returns if the contract is a Put or Call option.
                        sector: 
                          type: string
                          example: Technology
                          description: Returns the contract’s sector.
                        sectorGroup: 
                          type: string
                          example: Computers
                          description: Returns the sector’s group.
                        strike: 
                          type: string
                          example: "0"
                          description: Returns the strike of the contract.
                        ticker: 
                          type: string
                          example: "AAPL"
                          description: Returns the ticker symbol of the traded contract.
                        undConid: 
                          type: integer
                          example: 0
                          description: Returns the contract’s underlyer.
                        multiplier: 
                          type: integer
                          example: 0.0
                          description: Returns the contract multiplier.
                        type: 
                          type: string
                          example: Common
                          description: Returns stock type.
                        hasOptions: 
                          type: boolean
                          example: 
                          description: Returns if contract has tradable options contracts.
                        fullName: 
                          type: string
                          example: 
                          description: Returns symbol name for requested contract.
                        isUS: 
                          type: boolean
                          example: 
                          description: Returns if the contract is US based or not.
                        incrementRules:
                          type: array
                          description: Indicates increment rule values including lowerEdge and increment value.
                          items:
                            properties:
                              lowerEdge:
                                type: integer
                                description: If the current mark price of the instrument is at or above the lower edge, the given increment value is used for order prices.
                                example: 0.0
                              increment: 
                                type: integer
                                description: The price of the instrument must be submitted as a mulitple of the increment value.
                                example: 0.01
                        displayRule: 
                          type: array
                          description: Returns rules regarding incrementation for order placement. Not functional for all exchanges. Please see /iserver/contract/rules for more accurate rule details.
                          items:
                            properties:
                              magnification:
                                type: integer
                                example: 0
                                description: If the displayed contract information is multiplied based on a given magnitude, the value will be reflected here.
                              displayRuleStep:
                                type: array
                                items:
                                  properties:
                                    decimalDigits:
                                      type: integer
                                      example: 2
                                      description: Displays the total number of digits used after the decimal value.
                                    lowerEdge:
                                      type: integer
                                      description: The lowerEdge display value to correspond to increment rules.
                                      example: 0.0
                                    wholeDigits:
                                      type: integer
                                      example: 4
                                      description: Displays valid display prices for before and after the decimal value.
                        isEventContract: 
                          type: boolean
                          example: 
                          description: Returns if the contract is an event contract or not.
                        pageSize: 
                          type: integer
                          example: 
                          description: Returns the content size of the request.
  
  /trsrv/secdef/schedule:
    get:
      tags:
      - Contracts
      summary: Trading Schedule by Symbol
      description: Returns the trading schedule up to a month for the requested contract.
      parameters:
        - in: query
          name: assetClass
          required: true
          schema:
            enum: [STK, OPT, FUT, CFD, WAR, SWP, FND, BND, ICS]
            description: >
              Specify the security type of the given contract.
              Valid asset classes are:
               * `STK` - Stock
               * `OPT` - Option
               * `FUT` - Future
               * `CFD` - Contract for Difference
               * `WAR` - Warrant
               * `SWP` - Forex
               * `FND` - Mutual Fund
               * `BND` - Bond
               * `ICS` - Inter-Commodity Spread
        - in: query
          name: symbol
          required: true
          schema:
            example: AAPL
            description: Specify the symbol for your contract.
        - in: query
          name: exchange
          schema:
            example: NASDAQ
            description: Specify the primary exchange of your contract.
        - in: query
          name: exchangeFilter
          schema:
            example: AMEX,NASDAQ,NYSE
            description: Specify all exchanges you want to retrieve data from.
      responses:
        '200':
          description: Successful response containing a contract's security definition.
          content: 
            application/json:
              schema:
                items:
                  properties:
                    id: 
                      type: string
                      example: p102082
                      description: Exchange parameter id
                    tradeVenueId: 
                      type: string
                      example: v13133
                      description: Reference on a trade venue of given exchange parameter
                    timezone: 
                      type: string
                      example: "America/New_York"
                      description: References the time zone corresponding to the listed dates and times.
                    schedules:
                      type: array
                      description: Always contains at least one ‘tradingTime’ and zero or more ‘sessionTime’ tags
                      items:
                        properties:
                          clearingCycleEndTime: 
                            type: string
                            example: 
                            description: End time of clearing cycle.
                          tradingScheduleDate: 
                            type: string
                            example: 
                            description: > 
                              Date of the clearing schedule.
                              20000101 stands for any Sat, 20000102 stands for any Sun, … 20000107 stands for any Fri. 
                              Any other date stands for itself.
                          sessions: 
                            type: array
                            description: Lists the avialble trading sessions. This displays the regular trading hours. If the LIQUID hours differs from the total trading day then a separate ‘session’ tag is returned.
                            items:
                              properties:
                                openingTime: 
                                  type: string
                                  example: "0930"
                                  description: Opening date time of the session.
                                closingTime: 
                                  type: string
                                  example: "1600"
                                  description: Closing date time of the sesion.
                                prop: 
                                  type: string
                                  example: "LIQUID"
                                  description: If the whole trading day is considered LIQUID then the value ‘LIQUID’ is returned.
                          tradingTimes:
                            type: array
                            description: Object containing trading times.
                            items:
                              properties:
                                openingTime: 
                                  type: string
                                  example: "0400"
                                  description: Opening time of the trading day.
                                closingTime: 
                                  type: string
                                  example: "2000"
                                  description: Closing time of the trading day.
                                cancelDayOrders: 
                                  type: string
                                  example: "Y"
                                  description: Cancel time for day orders.

  /trsrv/stocks:
    get:
      tags:
      - Contracts
      summary: Stock Security Definition By Symbol
      description: Returns an object contains all stock contracts for given symbol(s)
      parameters:
        - in: query
          name: symbols
          required: true
          schema:
            example: AAPL,IBKR
            description: Comma-separated list of stock symbols. Symbols must contain only capitalized letters.
      responses:
        '200':
          description: Successful response containing a contract's security definition.
          content: 
            application/json:
              schema:
                properties:
                  {symbol}: 
                    type: array
                    description: >
                      Displayed as the string of your symbol
                      Contains a series of objects for each symbol that matches the requested.
                    items:
                      properties:
                        name: 
                          type: string
                          example: APPLE INC
                          description: Full company name for the given contract.
                        chineseName: 
                          type: string
                          example: "&#x82F9;&#x679C;&#x516C;&#x53F8;"
                          description: Chinese name for the given company as unicode.
                        assetClass: 
                          type: string
                          example: "STK"
                          description: Asset class for the given company.
                        contracts: 
                          type: array
                          description: >
                            A series of arrays pertaining to the same company listed by “name”.
                            Typically differentiated based on currency of the primary exchange.
                          items:
                            properties:
                              conid: 
                                type: integer
                                example: 265598
                                description: Contract ID for the specific contract.
                              exchange: 
                                type: string
                                example: "NASDAQ"
                                description: Primary exchange for the given contract.
                              isUS: 
                                type: boolean
                                example: true
                                description: States whether the contract is hosted in the United States or not.

  # FA Allocation Management
  /iserver/account/allocation/accounts:
    get:
      tags:
        - FA Allocation Management
      summary: Allocatable Sub-Accounts
      description: Retrieves a list of all sub-accounts and returns their net liquidity and available equity for advisors to make decisions on what accounts should be allocated and how.
      responses:
        '200':
          description: Indicates data is being returned successfully.
          content: 
            application/json:
              schema:
                properties:
                  accounts:
                    type: array
                    description: Returns an array containing all sub-accounts held by the advisor.
                    items:
                      properties:
                        data:
                          type: array
                          description: Contains Net liquidation and available equity of the given account Id.
                          items:
                            properties:
                              value:
                                type: string
                                example: "10"
                                description: Contains the price value affiliated with the key.
                              key: 
                                type: string
                                enum: [“AvailableEquity”, “NetLiquidation”]
                                description: >
                                  Defines the value of the object
                                   * `AvailableEquity` - Indicates the value relates to the Available Equity held within the account
                                   * `NetLiquidation` - Indicates the value relates to the Net Liquidation held within the account
                        name:
                          type: string
                          example: "U1234567"
                          description: Returns the account ID affiliated with the balance data.

  /iserver/account/allocation/group:
    get:
      tags:
        - FA Allocation Management
      summary: List All Allocation Groups
      description: Retrieves a list of all of the advisor’s allocation groups. This describes the name of the allocation group, number of subaccounts within the group, and the method in use for the group.
      responses:
        '200':
          description: Returns the "data" array, which contains all allocation groups under the advisor account.
          content: 
            application/json:
              schema:
                properties:
                  data:
                    type: array
                    items:
                      properties:
                        allocation_method:
                          type: string
                          example: "N"
                          description: Uses the Allocation Method Code to represent which method is implemented.
                        size:
                          type: integer
                          example: 10
                          description: Represents the total number of sub-accounts within the group.
                        name: 
                          type: string
                          example: Group_1_NetLiq
                          description: The name set for the given allocation group.
    
    put:
      tags:
        - FA Allocation Management
      summary: Modify Allocation Group
      description: Modify an existing allocation group.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Group_1_NetLiq
                  description: Name used to refer to your allocation group. If prev_name is specified, this will become the new name of the group.
                prev_name:
                  type: string
                  example: Group_0_NetLiq
                  description: Can be used to rename a group. Using this field will recognize the previous name, while the "name" filed will mark the updated name.
                accounts:
                  type: array
                  description: An array of accounts that should be held in the allocation group and, if using a User-specified allocaiton method, the value correlated to the allocation.
                  items:
                    properties:
                      name:
                        type: string
                        description: The accountId of a given sub-account.
                        example: "U1234567"
                      amount:
                        type: integer
                        description: The total distribution value for each sub-account for user-defined allocation methods.
                        example: 10
                    required:
                      - name
                      - amount
                default_method:
                  $ref: "#/components/schemas/default_method"
              required:
                - name
                - accounts
                - default_method
            examples:
              Shares:
                value: 
                  name: Group_1_Shares
                  previous_name: Group_0_Shares
                  amount: 15
                  default_method: "S"
                  accounts:
                    name: "U456789"
                    amount: 3
              NetLiq:
                value: 
                  name: Group_1_NetLiq
                  # amount: 15
                  default_method: "N"
              EqualQty:
                value: 
                  name: Group_1_Equal
                  # amount: 15
                  default_method: "E"
      responses:
        '200':
          description: Returns a confirmation that the modification was successful.
          content: 
            application/json:
              schema:
                properties:
                  success:
                    type: boolean

    post:
      tags:
        - FA Allocation Management
      summary: Add Allocation Group
      description: Add a new allocation group. This group can be used to trade in place of the {accountId} for the /iserver/account/{accountId}/orders endpoint.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Group_1_NetLiq
                  description: Name used to refer to your allocation group. If prev_name is specified, this will become the new name of the group.
                accounts:
                  type: array
                  description: An array of accounts that should be held in the allocation group and, if using a User-specified allocaiton method, the value correlated to the allocation.
                  items:
                    properties:
                      name:
                        type: string
                        description: The accountId of a given sub-account.
                        example: "U1234567"
                      amount:
                        type: integer
                        description: The total distribution value for each sub-account for user-defined allocation methods.
                        example: 10
                    required:
                      - name
                      - amount
                default_method:
                  $ref: "#/components/schemas/default_method"
              required:
                - name
                - accounts
                - default_method
            examples:
              Shares:
                value: 
                  name: Group_1_Shares
                  default_method: "S"
                  accounts:
                      - name: "U456789"
                        amount: 4
                      - name: "U123456"
                        amount: 1
              NetLiq:
                value: 
                  name: Group_1_NetLiq
                  default_method: "N"
                  accounts:
                      - name: "U456789"
                      - name: "U123456"
              EqualQty:
                value: 
                  name: Group_1_Equal
                  default_method: "E"
                  accounts:
                      - name: "U456789"
                      - name: "U123456"
      responses:
        '200':
          description: Returns a confirmation that the modification was successful.
          content: 
            application/json:
              schema:
                properties:
                  success:
                    type: boolean

  /iserver/account/allocation/group/single:
    post:
      tags:
        - FA Allocation Management
      summary: Retrieve Single Allocation Group
      description: Retrieves the configuration of a single account group. This describes the name of the allocation group, the specific accounts contained in the group, and the allocation method in use along with any relevant quantities.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Group_1_NetLiq
                  description: Name of an existing allocation group.
              required:
                - name
      responses:
        '200':
          description: Returns details of the allocation group.
          content: 
            application/json:
              schema:
                properties:
                  name:
                    type: string
                    example: Group_1_NetLiq
                    description: Name used to refer to your allocation group. This will be used while placing orders.
                  accounts:
                    type: array
                    description: Contains a series of objects depicting which accounts are involved and, for user-defined allocation methods, the distribution value for each sub-account.
                    items:
                      properties:
                        amount:
                          type: integer
                          example: 5
                          description: The total distribution value for each sub-account for user-defined allocation methods.
                        name:
                          type: string
                          example: "U1234567"
                          description: The accountId of a given sub-account.
                  default_method:
                    $ref: "#/components/schemas/default_method"

  /iserver/account/allocation/presets:
    get:
      tags:
        - FA Allocation Management
      summary: Retrieve Allocation Presets
      description: Retrieve the preset behavior for allocation groups for specific events.
      responses:
        '200':
          description: Successfully retrieve preset details
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/presets'

    post:
      tags:
        - FA Allocation Management
      summary: Set the Allocation Presets
      description: Set the preset behavior for new allocation groups for specific events.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: '#/components/schemas/presets'
      responses:
        '200':
          description: Successfully retrieve preset details
          content: 
            application/json:
              schema:
                properties:
                  success: 
                    type: boolean
                    example: true
                    description: Signifies that the request was successfully submitted. 

  # FYIs and Notifications
  /fyi/unreadnumber:
    get:
      tags:
        - FYIs and Notifications
      summary: Unread Bulletins
      description: Returns the total number of unread fyis
      responses:
        '200':
          description: Indicates data is being returned successfully.
          content: 
            application/json:
              schema:
                properties:
                  BN:
                    type: integer
                    example: 4
                    description: Returns the number of unread bulletins.
                    
  /fyi/settings:
    get:
      tags:
        - FYIs and Notifications
      summary: Get Notification Settings
      description: Return the current choices of subscriptions for notifications.
      responses:
        '200':
          description: Indicates data is being returned successfully.
          content: 
            application/json:
              schema:
                properties:
                  A:
                    type: integer
                    example: 
                    description: >
                      Returns if the subscription can be modified.
                      Only returned if the subscription can be modified.
                      See /fyi/settings/{typecode} for how to modify.
                  FC:
                    type: string
                    example: "M8"
                    description: Fyi code for enabling or disabling the notification.
                  H:
                    type: integer
                    example: 0
                    description: Disclaimer if the notification was read.
                  FD:
                    type: string
                    example: "Notify me when I establish position subject to US dividend tax withholding 871(m) rules."
                    description: Returns a detailed description of the topic.
                  FN:
                    type: string
                    example: "871(m) Trades"
                    description: Returns a human readable title for the notification.
  
  /fyi/settings/{typecode}:
    post:
      tags:
        - FYIs and Notifications
      summary: Modify FYI Notifications
      description: Enable or disable the specific typecode settings. 
      parameters:
        - in: path
          name: typecode
          required: true
          schema:
            $ref: '#/components/schemas/typecodes'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                enabled:
                  type: boolean
                  description:  the notification should be enabled or disabled.
      responses:
        '200':
          description: Successfully retrieve preset details
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/fyiVT'
  
  /fyi/disclaimer/{typecode}:
    get:
      tags:
        - FYIs and Notifications
      summary: Get disclaimer for a certain kind of fyi
      description: Receive additional disclaimers based on the specified typecode.
      parameters:
        - in: path
          name: typecode
          required: true
          schema:
            $ref: '#/components/schemas/typecodes'
      responses:
        '200':
          description: Successfully retrieve preset details
          content: 
            application/json:
              schema:
                properties:
                  FC: 
                    type: string
                    example: SM
                    description: Returns the Typecode for the given disclaimer.
                  DT: 
                    type: string
                    example: "This communication is provided for information purposes only and is not intended as a recommendation or a solicitation to buy, sell or hold any investment product. Customers are solely responsible for their own trading decisions."
                    description: Returns the Disclaimer message.
    put:
      tags:
        - FYIs and Notifications
      summary: Mark Disclaimer Read
      description: Mark a specific disclaimer message as read.
      parameters:
        - in: path
          name: typecode
          required: true
          schema:
            $ref: '#/components/schemas/typecodes'
      responses:
        '200':
          description: Successfully retrieve preset details
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/fyiVT'

  /fyi/deliveryoptions:
    get:
      tags:
        - FYIs and Notifications
      summary: Get Delivery OptionsCopy Location
      description: Options for sending fyis to email and other devices.
      responses:
        '200':
          description: Successfully retrieve preset details
          content: 
            application/json:
              schema:
                properties:
                  M:
                    type: integer
                    example: 
                    description: Email option is enabled or not.
                  E:
                    type: array
                    description: Returns an array of device information.
                    items:
                      properties: 
                        NM:
                          type: string
                          example: 
                          description: Returns the human readable device name.
                        I:
                          type: string
                          example: 
                          description: Returns the deice identifier.
                        UI:
                          type: string
                          example: 
                          description: Returns the unique device ID.
                        A:
                          type: string
                          example: 
                          description: Device is enabled or not.
      
  /fyi/deliveryoptions/device:
    put:
      tags:
        - FYIs and Notifications
      summary: Enable/Disable Device Option
      description: Choose whether a particular device is enabled or disabled.
      parameters:
        - in: path
          name: typecode
          required: true
          schema:
            $ref: '#/components/schemas/typecodes'
      responses:
        '200':
          description: Successfully retrieve preset details
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/fyiVT'
      
  /fyi/deliveryoptions/{deviceId}:
    delete:
      tags:
        - FYIs and Notifications
      summary: Delete a Device
      description: Delete a specific device from our saved list of notification devices.
      parameters:
        - in: path
          name: deviceId
          required: true
          schema:
            description: >
              Display the device identifier to delete from IB’s saved list.
              Can be retrieved from /fyi/deliveryoptions.
      responses:
        '200':
          description: No response message is returned. Instead, you will only receive an empty string with a 200 OK status code indicating a successfully deleted account.

  /fyi/deliveryoptions/email:
    put:
      tags:
        - FYIs and Notifications
      summary: Enable/Disable Email Option
      description: Enable or disable your account’s primary email to receive notifications.
      parameters:
        - in: query
          name: enabled
          required: true
          schema:
            example: true
            description: >
              Enable or disable your email.
              Value format: true: Enable; false: Disable
      responses:
        '200':
          description: Successfully enabled or disabled your email notifications.
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/fyiVT'

  /fyi/notifications:
    get:
      tags:
        - FYIs and Notifications
      summary: Get a list of notifications
      description: Get a list of available notifications.
      parameters:
        - in: query
          name: max
          required: true
          schema:
            example: 10
            description: >
              Specify the maximum number of notifications to receive.
              Can request a maximum of 10 notifications.
      responses:
        '200':
          description: Successfully enabled or disabled your email notifications.
          content: 
            application/json:
              schema:
                properties:
                  D:
                    type: string
                    example: "1702469440.0"
                    description: Notification date as an epoch string.
                  ID:
                    type: string
                    example: "2023121370119463"
                    description: Unique way to reference the notification.
                  FC:
                    type: string
                    example: OE
                    description: FYI code, we can use it to find whether the disclaimer is accepted or not in settings
                  MD:
                    type: string
                    example: "One or more option contracts in your portfolio are set to expire shortly.  <br> - QQQ 15DEC2023 385 P in Account(Qty): U****7890(6) <br> - QQQ 15DEC2023 387 P in Account(Qty): D****0685(-6) <br>  <br>Please use the Option Rollover tool to roll existing contracts into contracts with an expiration, strike and price condition of your preference."
                    description: Content of notification.
                  MS:
                    type: string
                    example: "IBKR FYI: Option Expiration Notification"
                    description: Title of notification.
                  R:
                    type: string
                    example: 0
                    description: >
                      Return if the notification was read or not.
                      Value Format: 0: Disabled; 1: Enabled.
  
  /fyi/notifications/{notificationID}:
    put:
      tags:
        - FYIs and Notifications
      summary: Mark Notification Read
      description: Mark a particular notification message as read or unread.
      parameters:
        - in: path
          name: notificationId
          required: true
          schema:
            description: Code used to signify a specific notification to mark. Value received from /fyi/notifications
      responses:
        '200':
          description: Successfully enabled or disabled your email notifications.
          content: 
            application/json:
              schema:
                properties:
                  V: 
                    type: integer
                    example: 1
                    description: Returns 1 to state message was acknowledged.
                  T: 
                    type: integer
                    example: 10
                    description: Returns the time in ms to complete the edit.
                  P:
                    type: object
                    description: Returns details about the notification read status.
                    properties:
                      R:
                        type: integer
                        example: 1
                        description: Returns if the message was read (1) or unread (0).
                      ID: 
                        type: string
                        example: "12345678901234567"
                        description: Returns the ID for the notification.
  # Watchlists

  /iserver/watchlist:
    post:
      tags: 
        - Watchlists
      summary: Create a watchlist to monitor a set of instruments.
      description: Create a named watchlist by submitting a set of conids. 
      requestBody:
        description: Watchlist contents.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  description: Must be a number, digits 0-9 only. Must be unique relative to other watchlist IDs.
                name:
                  type: string
                  description: Arbitrary human-readable name to be displayed in TWS and Client Portal.
                rows:
                  type: array
                  description: Array of JSON objects corresponding to watchlist rows, one per instruments.
                  uniqueItems: true
                  items:
                    properties:
                      C:
                        type: string
                        description: Conid as string. 
              required:
                - id
                - name
                - rows
      responses:
        '200':
          description: Watchlist creation successful.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: The submitted watchlist ID.
                  hash:
                    type: string
                    description: IB's internal hash of the submitted watchlist.
                  name:
                    type: string
                    description: The submitted human-readable watchlist name.
                  readOnly:
                    type: boolean
                    description: Indicates whether watchlist is write-restricted. User-created watchlists will always show false.
                  instruments:
                    type: array
                    description: Array will always be empty. Contents can be queried via GET /iserver/watchlist?id=
                    items:
                      type: string
                    maxItems: 0
  
components:
  schemas:
    secdefSearch:
      properties:
        conid:
          type: string
          example: 265598
          description: Contract identifier for the unique contract.
        companyHeader:
          type: string
          example: APPLE INC - NASDAQ
          description: Company Name - Exchange
        companyName:
          type: string
          example: APPLE INC
          description: Formal name of the company.
        symbol:
          type: string
          example: AAPL
          description: Underlying ticker symbol.
        description:
          type: string
          example: NASDAQ
          description: Primary exchange of the contract
        restricted:
          type: boolean
          description: Returns if the contract is available for trading.
        fop:
          type: string
          example: 20240105;20240112;20240119;20240126
          description: Returns a string of dates, separated by semicolons.
        opt:
          type: string
          example: 20240105;20240112;20240119;20240126
          description: Returns a string of dates, separated by semicolons.
        war:
          type: string
          example: 20240105;20240112;20240119;20240126
          description: Returns a string of dates, separated by semicolons.
        sections:
          type: array
          uniqueItems: true
          items:
            type: object
            properties:
              secType:
                type: string
                example: OPT
              months:
                type: string
                example: NOV23;DEC23;JAN24
              exchange:
                type: string
                example: SMART;AMEX;BATS;BOX
    contractRules:
      properties:
        algoEligible:
          type: boolean
          description: Indicates if the contract can trade algos or not.
        overnightEligible:
          type: boolean
          description: Indicates if outsideRTH trading is permitted for the instrument
        costReport:
          type: boolean
          description: Indicates whether or not a cost report has been requested (Client Portal only).
        canTradeAcctIds:
          type: array
          description: Indicates permitted accountIDs that may trade the contract.
          items:
            example: "U1234567"
        error:
          type: string
          description: If rules information can not be received for any reason, it will be expressed here.
        orderTypes:
          type: array
          description: Indicates permitted order types for use with standard quantity trading.
          example: ["limit","midprice","market","stop","stop_limit"]
        ibAlgoTypes:
          type: array
          description: Indicates permitted algo types for use with the given contract.
          example: ["limit","stop_limit","lit","trailing_stop_limit","relative","marketonclose","limitonclose"]
        fraqTypes:
          type: array
          description: Indicates permitted order types for use with fractional trading.
          example: ["limit"]
        forceOrderPreview:
          type: boolean
          description: Indicates if the order preview is forced upon the user before submission.
        cqtTypes:
          type: array
          description: Indicates accepted order types for use with cash quantity.
          example: ["limit","market","stop","stop_limit","mit","lit","trailing_stop","trailing_stop_limit"]
        orderDefaults: 
          type: object
          description: Indicates default order type for the given security type.
          properties:
            LMT:
              properties:
                LP:
                  type: string
                  description: Indicates a Limit Price default value.
                  example: "549000.00"
        orderTypesOutside:
          type: array
          description: Indicates permitted order types for use outside of regular trading hours.
          example: ["limit","stop_limit","lit","trailing_stop_limit","relative"]
        defaultSize:
          type: integer
          description: Default total quantity value for orders.
          example: 100
        cashSize:
          type: integer
          description: Default cash value quantity.
          example: 0.0
        sizeIncrement:
          type: integer
          description: Indicates quantity increase for the contract.
          example: 1
        tifTypes:
          type: array
          description: Indicates allowed tif types supported for the contract.
          example: ["IOC/MARKET,LIMIT,RELATIVE,MARKETONCLOSE,MIDPRICE,LIMITONCLOSE,MKT_PROTECT,STPPRT,a","GTC/o,a","OPG/LIMIT,MARKET,a","GTD/o,a","DAY/o,a"]
        tifDefaults:
          type: object
          description: >
            Object containing details about your TIF value defaults.
            These defaults can be viewed and modified in TWS’s within the Global Configuration.
          properties:
            TIF:
              type: string
              description: The default TIF type for orders.
              example: DAY
            SIZE:
              type: string
              description: The default size value for orders.
              example: "100.00"
        limitPrice:
          type: integer
          description: Default limit price for the given contract.
          example: 549000.0
        stopPrice:
          type: integer
          description: Default stop price for the given contract.
          example: 549000.0
        orderOrigination:
          type: string
          description: Order origin designation for US securities options and Options Clearing Corporation
          default: null
        preview:
          type: boolean
          description: Indicates if the order preview is required (for client portal only)
        displaySize:
          type: integer
          description: Standard display increment rule for the instrument.
          default: null
        fraqInt:
          type: integer
          description: Indicates decimal places for fractional order size.
          example: 0
        cashCcy:
          type: string
          description: Indicates base currency for the instrument.
          example: "USD"
        cashQtyIncr:
          type: integer
          description: Indicates cash quantity increment rules.
          example: 500
        priceMagnifier:
          type: integer
          description: >
            Signifies the magnifier of a given contract.
            This is separate from the price multiplier, and will typically return ‘null’
          default: null
        negativeCapable:
          type: boolean
          description: Indicates if the value of the contract can be negative (true) or if it is always positive (false).
          example: false
        incrementType:
          type: integer
          description: Indicates the type of increment style.
          example: 1
        incrementRules:
          type: array
          description: Indicates increment rule values including lowerEdge and increment value.
          items:
            properties:
              lowerEdge:
                type: integer
                description: If the current mark price of the instrument is at or above the lower edge, the given increment value is used for order prices.
                example: 0.0
              increment: 
                type: integer
                description: The price of the instrument must be submitted as a mulitple of the increment value.
                example: 0.01
        hasSecondary:
          type: boolean
        modTypes:
          type: array
          description: Lists the available order types supported when modifying the order.
          example: ["stop","market"]
        increment:
          type: integer
          description: Minimum increment values for prices
          example: 0.01
        incrementDigits:
          type: integer
          description: Number of decimal places to indicate the increment value.
          example: 2
    contractInfo:
      properties:
        cfi_code:
          type: string
          example: ""
          description: Classification of Financial Instrument codes
        symbol:
          type: string
          example: MHNG
          description: Underlying symbol
        cusip:
          type: string
          example: null
          description: Returns the CUSIP for the given instrument. Only used in BOND trading.
        expiry_full:
          type: string
          example: "202402"
          description: Returns the expiration month of the contract.
        con_id:
          type: integer
          example: 663134422
          description: Indicates the contract identifier of the given contract.
        maturity_date:
          type: string
          example: "20240126"
          description: Indicates the final maturity date of the given contract.
        industry:
          type: string
          example: "Computers"
          description: Specific group of companies or businesses.
        instrument_type:
          type: string
          example: "FUT"
          description: Asset class of the instrument.
        trading_class:
          type: string
          example: "MNG"
          description: Designated trading class of the contract.
        valid_exchanges:
          type: string
          example: "NYMEX"
          description: Comma separated list of support exchanges or trading venues.
        allow_sell_long:
          type: boolean
          example: false
          description: Allowed to sell shares you own.
        is_zero_commission_security:
          type: boolean
          example: false
          description: Indicates if the contract supports zero commission trading.
        local_symbol:
          type: string
          example: MNGG4
          description: Contract’s symbol from primary exchange. For options it is the OCC symbol.
        contract_clarification_type: 
          type: string
          example: null
        classifier: 
          type: string
          example: null
        currency:
          type: string
          example: USD
          description: Base currency contract is traded in.
        text:
          type: string
          example: MHNG FEB24 (1000)
          description: Indicates the display name of the contract, as shown with Client Portal.
        underlying_con_id:
          type: integer
          example: 663126427
          description: Underlying contract identifier for the requested contract.
        r_t_h:
          type: boolean
          example: false
          description: Indicates if the contract can be traded outside regular trading hours or not.
        multiplier:
          type: string
          example: "1000"
          description: Indicates the multiplier of the contract.
        underlying_issuer:
          type: string
          example: null
          description: Indicates the issuer of the underlying.
        contract_month:
          type: string
          example: null
          description: Indicates the year and month the contract expires.
        company_name:
          type: string
          example: "Micro Henry Hub Natural Gas"
          description: Indicates the name of the company or index.
        smart_available:
          type: boolean
          example: true
          description: Indicates if the contract can be smart routed or not.
        exchange:
          type: string
          example: NYMEX
          description: Indicates the primary exchange for which the contract can be traded.
        category:
          type: string
          example: Computers
          description: Indicates the industry category of the instrument.
    default_method:
      type: string
      default: "N"
      enum: ["A", "E", "N", "C", "P", "R", "S"]
      description: >
        Interactive Brokers supports two forms of allocation methods. Allocation methods that have calculations completed by Interactive Brokers, and a set of allocation methods calculated by the user and then specified.
        IB-computed allocation methods:
          * `A` - Available Equity
          * `E` - Equal
          * `N` - Net Liquidation Value
        
        User-specified allocation methods:
          * `C` - Cash Quantity
          * `P` - Percentage
          * `R` - Ratios
          * `S` - Shares
    presets:
      properties:
        group_auto_close_positions:
          type: boolean
          example: true
          description: Determines if allocation groups should prioritize closing positions over equal distribution.
        default_method_for_all:
          enum: ["A", "E", "N", "C", "P", "R", "S"]
          description: >
            Interactive Brokers supports two forms of allocation methods. Allocation methods that have calculations completed by Interactive Brokers, and a set of allocation methods calculated by the user and then specified.
            IB-computed allocation methods:
              * `A` - Available Equity
              * `E` - Equal
              * `N` - Net Liquidation Value
            
            User-specified allocation methods:
              * `C` - Cash Quantity
              * `P` - Percentage
              * `R` - Ratios
              * `S` - Shares
        profiles_auto_close_positions:
          type: boolean
          example: true
          description: Determines if allocation profiles should prioritize closing positions over equal distribution.
        strict_credit_check:
          type: boolean
          example: true
          description: Determines if the system should always check user credit before beginning the order process every time, or only at the time of order placement and execution.
        group_proportional_allocation:
          type: boolean
          example: true
          description: Determines if the system should keep allocation groups proportional for scaling.
    typecodes:
      enum: ["BA", "CA", "DA", "EA", "MF", "OE", "PR", "SE", "SG", "SM", "T2", "TO", "UA", "M8", "PS", "DL", "PT", "CB", "MS", "TD", "ST", "TI", "CT"]
      description: >
        Many FYI endpoints reference a “typecode” value. The table below lists the available codes and what they correspond to.
          * `BA` - Borrow Availability
          * `CA` - Comparable Algo
          * `DA` - Dividends Advisory
          * `EA` - Upcoming Earnings
          * `MF` - Mutual Fund Advisory
          * `OE` - Option Expiration
          * `PR` - Portfolio Builder Rebalance
          * `SE` - Suspend Order on Economic Event
          * `SG` - Short Term Gain turning Long Term
          * `SM` - System Messages
          * `T2` - Assignment Realizing Long-Term Gains
          * `TO` - Takeover
          * `UA` - User Alert
          * `M8` - M871 Trades
          * `PS` - Platform Use Suggestions
          * `DL` - Unexercised Option Loss Prevention Reminder
          * `PT` - Position Transfer
          * `CB` - Missing Cost Basis
          * `MS` - Milestones
          * `TD` - MiFID || 10% Deprecation Notice
          * `ST` - Save Taxes
          * `TI` - Trade Idea
          * `CT` - Cash Transfer
    fyiVT:
      properties:
        V: 
          type: integer
          example: 1
          description: Returns 1 to state message was acknowledged.
        T: 
          type: integer
          example: 10
          description: Returns the time in ms to complete the edit.