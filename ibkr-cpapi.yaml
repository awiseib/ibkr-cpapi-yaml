openapi: 3.0.0
info:
  title: IBKR CPAPI
  description: Interactive Brokers RESTful API built around the Interactive Brokers Client Portal interface.
  version: 0.0.1
  
servers:
  # After hyphen, underlying descriptions should be equally indented to same level of indentation.
  - url: https://localhost:5000/v1/api
    description: Client Portal Gateway Base URL
  - url: https://localhost:5000/alpha/api
    description: >
      Client Portal Gateway Alpha Environment URL
      This requires the local bin/run.bat include '-conf conf.api.alpha.yaml' as a java argument.
      This also requires that conf.api.alpha.yaml is referenced instead of the standard conf.yaml.
  - url: https://api.ibkr.com/v1/api
    description: OAuth 1.0A Base URL.
  - url: https://api.ibkr.com/alpha/api
    description: OAuth 1.0A Alpha Environment Base URL. 
  - url: https://api.ibkr.com/tv/api
    description: TradingView Base URL.

paths:
  # Alerts
  /iserver/account/{accountId}/alert:
    post:
      tags:
        - Alerts
      summary: Create or Modify Alert
      description: Endpoint used to create a new alert, or modify an existing alert.
      parameters:
        - in: path
          name: accountId
          schema:
            type: string
            example: U1234567
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                alertName:
                  type: string
                  description: Identifier for the unique account to retrieve information from.
                  example: "AAPL_Price"
                alertMessage:
                  type: string
                  description: The body content of what your alert will report once triggered
                  example: "AAPL Price Drop!"
                alertRepeatable:
                  type: integer
                  description: Boolean number (0, 1) signifies if an alert can be triggered more than once. A value of ‘1’ is required for MTA alerts
                  example: 0
                email:
                  type: string
                  description: "user@domain.net"
                  example: Email address you want to send email alerts to
                expireTime:
                  type: string
                  description: Used with a tif of “GTD” only. Signifies time when the alert should terminate if no alert is triggered.
                  example: "20231231-12:00:00"
                iTWSOrdersOnly:
                  type: integer
                  description: Boolean number (0, 1) to allow alerts to trigger alerts through the mobile app
                  example: 0
                outsideRth:
                  type: integer
                  description: Boolean number (0, 1) to allow the alert to trigger outside of regular trading
                  example: 0
                sendMessage:
                  type: integer
                  description: Boolean number (0, 1) to allow alerts to trigger email messages
                  example: 0
                showPopup:
                  type: integer
                  description: Boolean number (0, 1) to allow alerts to trigger TWS Pop-up messages
                  example: 0
                tif: 
                  type: string
                  description: "Time in Force duration of alert. Allowed: [“GTC”, “GTD”]"
                  example: "GTD"
                conditions:
                  type: array
                  description: Container for all conditions applied for an alert to trigger.
                  items:
                    properties:
                      conidex:
                        type: string
                        description: Concatenation of conid and exchange. Formatted as “conid@exchange”
                        example: “265598@SMART”
                      logicBind:
                        type: string
                        description: >
                          Describes how multiple conditions should behave together.
                          Available logic types:
                            * `a` - AND
                            * `o` - OR
                            * `n` - END
                        default: "a"
                        enum: ["a", "o", "n"]
                      operator:
                        type: string
                        description: Indicates whether the trigger should be above or below the given value.
                        example: ">="
                      timeZone:
                        type: string
                        description: Only needed for some MTA alert condition.
                        example: "US/Eastern"
                      triggerMethod:
                        type: integer
                        description: Pass the string representation of zero, “0”
                        example: "0"
                      "type":
                        type: integer
                        description: >
                          Designate what condition type to use. Note the "MTA" types listed are only supported if iTWSOrdersOnly=1
                          Available condition types:
                            * `1` - Price
                            * `3` - Time
                            * `4` - Margin
                            * `5` - Trade
                            * `6` - Volume
                            * `7` - MTA Market
                            * `8` - MTA Postion
                            * `9` - MTA Account Daily PnL
                        example: 1
                      "value":
                        type: string
                        description: Trigger value based on Type.
                        default: "*"
                    required:
                      - conidex
                      - logicBind
                      - operator
                      - triggerMethod
                      - type
                      - value
              required:
                - alertName
                - alertMessage
                - alertRepeatable
                - outsideRth
                - tif
                - conditions
      responses:
        '200':
            description: An object containing valid accounts and the account properties regarding trading access. This endpoint is also used to confirm account validation. 
            content: 
              application/json:
                schema:
                  properties:
                    request_id:
                      type: integer
                      example: null
                    order_id:
                      type: integer
                      example: 9876543210
                      description: >
                        The tracking number of the alert.
                        Occasssionally referenced as the alertId or alert_id.
                    success:
                      type: boolean
                      description: Displays result status of alert request
                    text:
                      type: string
                      example: "Submitted"
                      description: Response message to clarify success status reason.
                    order_status:
                      type: string
                      description: Returns ‘null’
                      example: null
                    warning_message:
                      type: string
                      description: Returns ‘null’
                      example: null

  /iserver/account/{accountId}/alerts:
    get:
      tags:
        - Alerts
      summary: Get a list of available alerts
      description: Retrieve a list of all alerts attached to the provided account.
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
            example: "U1234567"
            description: Identifier for the unique account to retrieve information from. 
      responses:
        '200':
          description: An array of objects detailing contract information.
          content: 
            application/json:
              schema:
                type: array
                uniqueItems: true
                items:
                  description: An array containing all alerts as separate objects.
                  properties:
                    order_id:
                      type: integer
                      description: The searchable order ID
                      example: 9876543210
                    account:
                      type: string
                      description: The account the alert was attributed to.
                      example: "U1234567"
                    alert_name:
                      type: string
                      description: The requested name for the alert.
                      example: "AAPL Price"
                    alert_active:
                      type: integer
                      description: Determines if the alert is active or not
                      example: 1
                    order_time:
                      type: string
                      description: UTC-formatted time of the alert’s creation.
                      example: "20231211-18:55:35"
                    alert_triggered:
                      type: boolean
                      description: Confirms if the order is is triggered or not.
                      example: false
                    alert_repeatable:
                      type: integer
                      description: Confirms if the alert is enabled to occur more than once.
                      example: 0

  /iserver/account/alert/{order_id}:
    get:
      tags:
        - Alerts
      summary: Get details of a specific alert
      description: Request details of a specific alert by providing the assigned order ID.
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: string
            example: "U1234567"
            description: Identifier for the unique account to retrieve information from. 
      responses:
        '200':
          description: An object containing all unique details of the specified alert.
          content: 
            application/json:
              schema:
                properties:
                  account:
                    type: string
                    description: Requestor’s account ID
                    example: 
                  order_id:
                    type: integer
                    description: Alert’s tracking ID. Can be used for modifying or deleting alerts.
                    example: 
                  alertName:
                    type: string
                    description: Human readable name of the alert.
                    example: 
                  tif:
                    type: string
                    description: Time in Force effective for the Alert
                    example: 
                  expire_time:
                    type: string
                    description: Returns the UTC formatted date used in GTD orders.
                    example: 
                  alert_active:
                    type: integer
                    description: Returns if the alert is active or disabled.
                    example: 
                  alert_repeatable:
                    type: integer
                    description: Returns if the alert can be sent more than once.
                    example: 
                  alert_email:
                    type: string
                    description: Returns the designated email address for sendMessage functionality.
                    example: 
                  alert_send_message:
                    type: integer
                    description: Returns whether or not the alert will send an email.
                    example: 
                  alert_message:
                    type: string
                    description: Returns the body content of what your alert will report once triggered
                    example: 
                  alert_show_popup:
                    type: integer
                    description: Returns whether or not the alert will trigger TWS Pop-up messages
                    example: 
                  alert_play_audio:
                    type: integer
                    description: Returns whether or not the alert will play audio
                    example: 
                  order_status:
                    type: string
                    description: Always returns “Presubmitted”.
                    example: 
                  alert_triggered:
                    type: integer
                    description: Returns whether or not the alert was triggered yet.
                    example: 
                  fg_color:
                    type: string
                    description: Always returns “#FFFFFF”. Can be ignored.
                    example: 
                  bg_color:
                    type: string
                    description: Always returns “#000000”. Can be ignored.
                    example: 
                  order_not_editable:
                    type: boolean
                    description: Returns if the order can be edited.
                    example: 
                  itws_orders_only:
                    type: integer
                    description: Returns whether or not the alert will trigger mobile notifications.
                    example: 
                  alert_mta_currency:
                    type: string
                    description: Returns currency set for MTA alerts. Only valid for alert type 8 & 9.
                    example: 
                  alert_mta_defaults:
                    type: string
                    description: Returns current MTA default values.
                    example: 
                  tool_id:
                    type: integer
                    description: Tracking ID for MTA alerts only. Returns ‘null’ for standard alerts.
                    example: 
                  time_zone:
                    type: string
                    description: Returned for time-specifc conditions.
                    example: 
                  alert_default_type:
                    type: integer
                    description: Returns default type set for alerts. Configured in Client Portal.
                    example: 
                  condition_size:
                    type: integer
                    description: Returns the total number of conditions in the alert.
                    example: 
                  condition_outside_rth:
                    type: integer
                    description: Returns whether or not the alert will trigger outside of regular trading hours.
                    example: 
                  conditions: 
                    type: array
                    description: Returns all conditions
                    items:
                      properties:
                        condition_type:
                          type: integer
                          description: Returns the type of condition set.
                          example: 1
                        conidex:
                          type: string
                          description: Returns full conidex in the format “conid@exchange”
                          example: "265598@ISLAND"
                        contract_description_1:
                          type: string
                          description: Includes relevant descriptions (if applicable).
                          example: "AAPL"
                        condition_operator:
                          type: string
                          description: Returns condition set for alert.
                          example: "<="
                        condition_trigger_method:
                          type: integer
                          description: Returns triggerMethod value set.
                          example: "0"
                        condition_value:
                          type: string
                          description: Returns value set.
                          example: "178.98"
                        condition_logic_bind:
                          type: boolean
                          description: Returns logic_bind value set.
                          example: "n"
                        condition_time_zone:
                          type: string
                          description: Returns timeZone value set.
                          example: null

  /iserver/account/mta:
    get:
      tags:
        - Alerts
      summary: Get MTA Alert
      description: >
        Retrieve information about your MTA alert.
        Each login user only has one mobile trading assistant (MTA) alert with it’s own unique tool id that cannot be changed.
        MTA alerts can not be created or deleted, only modified. When modified a new order Id is generated.
        See our <a href="https://www.ibkrguides.com/iphone/alerts.htm">Mobile Alert Guide</a> for more information on MTA alerts.
      responses:
        '200':
          description: The alert description for the unique MTA alert on the account.
          content: 
            application/json:
              schema:
                properties:
                  account:
                    type: string
                    description: Requestor’s account ID
                    example: "U1234567"
                  order_id:
                    type: integer
                    description: Alert’s tracking ID. Can be used for modifying or deleting alerts.
                    example: 9876543210
                  alertName:
                    type: string
                    description: Human readable name of the alert.
                    example: "AAPL Price"
                  tif:
                    type: string
                    description: Time in Force effective for the Alert
                    example: "GTD"
                  expire_time:
                    type: string
                    description: Returns the UTC formatted date used in GTD orders.
                    example: "20231231-12:00:00"
                  alert_active:
                    type: integer
                    description: Returns if the alert is active or disabled.
                    example: 1
                  alert_repeatable:
                    type: integer
                    description: Returns if the alert can be sent more than once.
                    example: 0
                  alert_email:
                    type: string
                    description: Returns the designated email address for sendMessage functionality.
                    example: null
                  alert_send_message:
                    type: integer
                    description: Returns whether or not the alert will send an email.
                    example: 0
                  alert_message:
                    type: string
                    description: Returns the body content of what your alert will report once triggered
                    example: "MTA TEST!"
                  alert_show_popup:
                    type: integer
                    description: Returns whether or not the alert will trigger TWS Pop-up messages
                    example: 0
                  alert_play_audio:
                    type: integer
                    description: Returns whether or not the alert will play audio
                    example: null
                  order_status:
                    type: string
                    description: Always returns “Presubmitted”.
                    example: "“Presubmitted”"
                  alert_triggered:
                    type: integer
                    description: Returns whether or not the alert was triggered yet.
                    example: 0
                  fg_color:
                    type: string
                    description: Always returns “#FFFFFF”. Can be ignored.
                    example: "#FFFFFF"
                  bg_color:
                    type: string
                    description: Always returns “#000000”. Can be ignored.
                    example: #000000
                  order_not_editable:
                    type: boolean
                    description: Returns if the order can be edited.
                    example: false
                  itws_orders_only:
                    type: integer
                    description: Returns whether or not the alert will trigger mobile notifications.
                    example: 0
                  alert_mta_currency:
                    type: string
                    description: Returns currency set for MTA alerts. Only valid for alert type 8 & 9.
                    example: "USD"
                  alert_mta_defaults:
                    type: string
                    description: Returns current MTA default values.
                    example: "9:STATE=1,MIN=-43275000,MAX=43275000,STEP=500,DEF_MIN=-4327500,DEF_MAX=4327500|8:STATE=0,MIN=-15,MAX=15,STEP=0.5,DEF_MIN=-2,DEF_MAX=2|7:STATE=1,MIN=-5,MAX=5,STEP=0.5,DEF_MIN=-2,DEF_MAX=2|4:STATE=1,MIN=1,MAX=50,STEP=1,DEF_VAL=10|5:STATE=0"
                  tool_id:
                    type: integer
                    description: Tracking ID for MTA alerts only. Returns ‘null’ for standard alerts.
                    example: 55834574848
                  time_zone:
                    type: string
                    description: Returned for time-specifc conditions.
                    example: null
                  alert_default_type:
                    type: integer
                    description: Returns default type set for alerts. Configured in Client Portal.
                    example: null
                  condition_size:
                    type: integer
                    description: Returns the total number of conditions in the alert.
                    example: 0
                  condition_outside_rth:
                    type: integer
                    description: Returns whether or not the alert will trigger outside of regular trading hours.
                    example: 0
                  conditions: 
                    type: array
                    description: Returns all conditions.
                    items:
                      properties:
                        condition_type:
                          type: integer
                          description: Returns the type of condition set.
                          example: 9
                        conidex:
                          type: string
                          description: Returns full conidex in the format “conid@exchange”
                          example: "265598@ISLAND"
                        contract_description_1:
                          type: string
                          description: Includes relevant descriptions (if applicable).
                          example: "AAPL"
                        condition_operator:
                          type: string
                          description: Returns condition set for alert.
                          example: "<="
                        condition_trigger_method:
                          type: integer
                          description: Returns triggerMethod value set.
                          example: "0"
                        condition_value:
                          type: string
                          description: Returns value set.
                          example: "178.98"
                        condition_logic_bind:
                          type: boolean
                          description: Returns logic_bind value set.
                          example: "n"
                        condition_time_zone:
                          type: string
                          description: Returns timeZone value set.
                          example: null

  /iserver/account/{accountId}/alert/activate:
      post:
        tags:
          - Alerts
        summary: Activate or deactivate an alert
        description: Activate or Deactivate existing alerts created for this account. This does not delete alerts, but disables notifications until reactivated.
        parameters:
          - in: path
            name: accountId
            schema:
              type: string
              example: U1234567
            required: true
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  alertId:
                    type: integer
                    description: The alertId, or order_id, received from order creation or the list of alerts.
                    example: 9876543210
                  alertActive:
                    type: integer
                    description: Set whether or not the alert should be active (1) or inactive (0).
                    example: 1
                required:
                  - alertId
                  - alertActive
        responses:
          '200':
              description: An object containing details about the modified alert.
              content: 
                application/json:
                  schema:
                    properties:
                      request_id:
                        type: integer
                        example: null
                      order_id:
                        type: integer
                        example: 9876543210
                        description: >
                          The tracking number of the alert.
                          Occasssionally referenced as the alertId or alert_id.
                      success:
                        type: boolean
                        description: Displays result status of alert request
                      text:
                        type: string
                        example: "Request was submitted"
                        description: Response message to clarify success status reason.
                      failure_list:
                        type: string
                        description: If “success” returns false, will list failed order Ids
                        example: null

  /iserver/account/{accountId}/alert/{alertId}:
      delete:
        tags:
          - Alerts
        summary: Delete an alert
        description: Permanently delete an existing alert. Deleting an MTA alert will reset it to the default state.
        parameters:
          - in: path
            name: accountId
            schema:
              type: string
              example: U1234567
            required: true
          - in: path
            name: alertId
            schema:
              type: string
              description: order_id returned from the original alert creation, or from the list of available alerts.
              example: "9876543210"
            required: true
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
        responses:
          '200':
              description: An object containing details on the deleted endpoint.
              content: 
                application/json:
                  schema:
                    properties:
                      request_id:
                        type: integer
                        example: null
                      order_id:
                        type: integer
                        example: 9876543210
                        description: >
                          The tracking number of the alert.
                          Occasssionally referenced as the alertId or alert_id.
                      success:
                        type: boolean
                        description: Displays result status of alert request
                      text:
                        type: string
                        example: "Request was submitted"
                        description: Response message to clarify success status reason.
                      failure_list:
                        type: string
                        description: If “success” returns false, will list failed order Ids
                        example: null

  # Accounts
  /iserver/account/pnl/partitioned:
      get:
        # Tags allow us to categorize requests, as shown in REDOC directly.
        tags:
        - Accounts
        summary: Account Profit and Loss
        responses:
          '200':
            description: Refers to “updated PnL”. Holds a json object of key-value paired pnl details. 
            content: 
              application/json:
                schema:
                  properties:
                    upnl:
                      type: object
                      description: Refers to the U accounts PnL. This does reference Realized Profit and Loss.
                      properties:
                        "U1234567.Core":
                          type: object
                          description: The account or model's Profit and Loss. 
                          properties:
                            rowType:
                              type: integer
                              description: Returns the positional value of the returned account. Always returns 1 for individual accounts.
                              example: 1
                            dpl:
                              type: integer
                              description: Daily PnL for the specified account profile.
                              example: 15.7
                            nl:
                              type: integer
                              description: Net Liquidity for the specified account profile.
                              example: 10000.0
                            upl:
                              type: integer
                              description: Unrealized PnL for the specified account profile.
                              example: 607.0
                            el:
                              type: integer
                              description: Excess Liquidity for the specified account profile.
                              example: 10000.0
                            mv:
                              type: integer
                              description: Margin value for the specified account profile.
                              example: 0.0
  
  /iserver/account/search/{searchPattern}:
      get:
        # Tags allow us to categorize requests, as shown in REDOC directly.
        tags:
        - Accounts
        summary: Search Dynamic Account
        description: >
          Returns a list of accounts matching a query pattern set in the request.
          Broker accounts configured with the DYNACCT property will not receive account information at login. Instead, they must dynamically query then set their account number.
          Customers without the DYNACCT property will receive a 503 error. 
        parameters:
          - in: path
            name: searchPattern
            schema:
              type: string
              description: The pattern used to describe credentials to search for. Including part of part of an account ID will return the full value.
              example: U123
            required: true

        responses:
          '200':
            description: Returns all accounts that match the searchPattern string.
            content: 
              application/json:
                schema:
                  properties:
                    matchedAccounts:
                      type: array
                      description: Contains a series of objects that pertain to the account information requested.
                      items:
                        properties:
                          accountId:
                            type: string
                            description: Returns a matching account ID that corresponds to the matching value.
                            example: "U1234567"
                          alias:
                            type: string
                            description: Returns the corresponding alias or alternative name for the specific account ID. May be a duplicate of the accountId value in most cases.
                            example: "Example_Alias"
                          allocationId:
                            type: string
                            description: Returns the allocation identifier used internally for the account.
                            example: "1"
                    pattern:
                      type: string
                      description: Displays the searchPattern used for the request.
                      example: "U123"

  /iserver/dynaccount:
    post:
      tags:
      - Accounts
      summary: Set Dynamic Account
      description: Set the active dynamic account.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                acctId:
                  type: string
                  example: "U1234567"
                  description: The account ID that should be set for future requests.
              required:
                - acctId
      responses:
        '200':
          description: An array of objects detailing contract information.
          content: 
            application/json:
              schema:
                type: object
                properties:
                  set:
                    type: boolean
                    description: Confirms if the account change was fully set.
                  acctId:
                    type: string
                    example: "U123567"
                    description: The account ID specified in the request body.

  /acesws/{accountId}/signatures-and-owners:
    get:
      tags:
        - Accounts
      summary: Signatures and Owners
      description: Receive a list of all applicant names on the account and for which account and entity is represented.
      parameters:
        - in: path
          name: accountId
          schema:
            type: string
            description: Pass the account identifier to receive information for.
            example: U1234567
          required: true
      responses:
        '200':
            description: An object containing valid accounts and the account properties regarding trading access. This endpoint is also used to confirm account validation. 
            content: 
              application/json:
                schema:
                  properties:
                    accountId:
                      example: "U1234567"
                      type: string
                      description: An accessible accountId
                    users:
                      type: array
                      description: Returns all usernames and their information affiliated with the account.
                      items:
                        properties:
                          roleId:
                            type: string
                          hasRightCodeInd:
                            type: string
                          userName:
                            type: string
                          entity:
                            type: object
                            description: Provides information about the particular entity.
                            properties:
                              firstName:
                                type: string
                                example: John
                                description: Returns the first name of the user.
                              lastName:
                                type: string
                                example: Smith
                                description: Returns the last name of the user.
                              entityType:
                                type: string
                                enum:
                                  - INDIVIDUAL
                                  - Joint
                                  - ORG
                                description: Returns the type of entity assigned to the user.
                              entityName:
                                type: string
                                example: John Smith
                                description: Returns the full entity’s name, concatenating the first and last name fields.
                    applicant:
                      description: Provides information about the individual listed for the account.
                      properties:
                        signatures:
                          description: Returns all names attached to the account.
                          type: array
                          items:
                            example: John Smith

  /iserver/account:
    post:
      tags:
        - Accounts
      summary: Switch Account
      description: >
        Switch the active account for how you request data.
        Only available for financial advisors and multi-account structures.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                acctId:
                  example: "U1234567"
                  description: Identifier for the unique account to retrieve information from.
                  type: string
      responses:
        '200':
          description: Validates the account swapped to.
          content:
            application/json:
              schema:
                type: object
                properties:
                  set:
                    type: boolean
                    description: Confirms that the account change was set
                  acctId:
                    type: string
                    example: U1234567
                    description: Confirms the account switched to.
            



  /iserver/accounts:
      get:
        # Tags allow us to categorize requests, as shown in REDOC directly.
        tags:
        - Session
        - Accounts
        summary: Receive brokerage accounts for the current user.
        description: Returns a list of accounts the user has trading access to, their respective aliases and the currently selected account. Note this endpoint must be called before modifying an order or querying open orders.
        responses:
          '200':
            description: An object containing valid accounts and the account properties regarding trading access. This endpoint is also used to confirm account validation. 
            content: 
              application/json:
                schema:
                  properties:
                    accounts:
                      type: array
                      description: Returns an array of all accessible accountIds.
                      items:
                        example: "U1234567"
                        type: string
                        description: An accessible accountId 
                    acctProps:
                      type: object
                      description: Returns an json object for each accessible account’s properties.
                      properties:
                        U1234567:
                          type: object
                          properties:
                            hasChildAccounts:
                              type: boolean
                            supportsCashQty:
                              type: boolean
                            noFXConv: 
                              type: boolean
                            isProp: 
                              type: boolean
                            supportsFractions:
                              type: boolean
                            allowCustomerTime:
                              type: boolean
                    aliases:
                      type: object
                      properties:
                        "U1234567": 
                          type: string
                          example: "Example_Alias"
                    allowFeatures:
                      type: object
                      properties:
                        showGFIS: 
                          type: boolean
                        showEUCostReport: 
                          type: boolean
                        allowEventContract:
                          type: boolean
                        allowFXConv:
                          type: boolean
                        allowFinancialLens:
                          type: boolean
                        allowMTA:
                          type: boolean
                        allowTypeAhead: 
                          type: boolean
                        allowEventTrading: 
                          type: boolean
                        snapshotRefreshTimeout: 
                          type: integer
                          format: int64
                          example: 30
                        liteUser: 
                          type: boolean
                        showWebNews: 
                          type: boolean
                        research:
                          type: boolean
                        debugPnl:
                          type: boolean
                        showTaxOpt:
                          type: boolean
                        showImpactDashboard:
                          type: boolean
                        allowDynAccount:
                          type: boolean
                        allowCrypto:
                          type: boolean
                        allowedAssetTypes: 
                          type: string
                          example: "STK,OPT,FUT,CASH,CRYPTO"
                    chartPeriods:
                      type: object
                      properties:
                        "STK":
                          type: array
                          items:
                            example: "*"
                        "CFD":
                          type: array
                          items:
                            example: "*"
                        "OPT":
                          type: array
                          items:
                            example: ["2h","1d","2d","1w","1m"]
                        "FOP":
                          type: array
                          items:
                            example: ["2h","1d","2d","1w","1m"]
                        "WAR":
                          type: array
                          items:
                            example: "*"
                        "IOPT":
                          type: array
                          items:
                            example: "*"
                        "FUT":
                          type: array
                          items:
                            example: "*"
                        "CASH":
                          type: array
                          items:
                            example: "*"
                        "IND":
                          type: array
                          items:
                            example: "*"
                        "BOND":
                          type: array
                          items:
                            example: "*"
                        "FUND":
                          type: array
                          items:
                            example: "*"
                        "CMDTY":
                          type: array
                          items:
                            example: "*"
                        "PHYSS":
                          type: array
                          items:
                            example: "*"
                        "CRYPTO":
                          type: array
                          items:
                            example: "*"
                    groups:
                      type: array
                    profiles:
                      type: array
                    selectedAccount:
                      type: string
                      example: "U1235467"
                    serverInfo:
                      type: object
                      properties:
                        serverName:
                          type: string
                          example: "JifN10037"
                        serverVersion:
                          type: string
                          example: "Build 10.26.1j, Jan 3, 2024 2:11:43 PM"
                    sessionId:
                      type: string
                      example: "659ce14f.0000000a"
                    isFt:
                      type: boolean
                    isPaper:
                      type: boolean
  
  # Accounts       
  /iserver/secdef/search:
    get:
      # Tags allow us to categorize requests, as shown in REDOC directly.
      tags:
      - Contracts
      summary: Returns a list of contracts based on symbol.
      description: Returns a list of contracts based on the search symbol provided as a query param. 
      parameters:
      # Specify param type, including query, path, or body params.
      - in: query
        name: symbol
        required: true
        schema:
          type: string
          example: AAPL
          description: The ticker symbol, bond issuer type, or company name of the equity you are looking to trade.
      - in: query
        name: secType
        required: false
        schema:
          type: string
          default: STK
          enum: [STK, IND, BOND]
        # Bullet points are indicated by the original indent, a space, the asterisk, then another space. 
        # The back tick formats the topic, while information after the hyphen denotes description.
        description: >
          Available underlying security types:
            * `STK` - Represents an underlying as a Stock security type.
            * `IND` - Represents an underlying as an Index security type.
            * `BOND` - Represents an underlying as a Bond security type.
      - in: query
        name: name
        required: false
        schema:
          type: boolean
          description: Denotes if the symbol value is the ticker symbol or part of the company's name. 
      responses:
        '200':
          description: An array of objects detailing contract information.
          content: 
            application/json:
              schema:
                type: array
                uniqueItems: true
                items:
                  $ref: '#/components/schemas/secdefSearch'

    post:
      tags:
      - Contracts
      summary: Returns a list of contracts based on symbol.
      description: Returns a list of contracts based on the search symbol provided as a query param. 
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                symbol:
                  type: string
                  example: AAPL
                  description: The ticker symbol, bond issuer type, or company name of the equity you are looking to trade.
                secType:
                  type: string
                  default: STK
                  enum: [STK, IND, BOND]
                  description: >
                    Available underlying security types:
                      * `STK` - Represents an underlying as a Stock security type.
                      * `IND` - Represents an underlying as an Index security type.
                      * `BOND` - Represents an underlying as a Bond security type.
                name:
                  type: boolean
                  description: Denotes if the symbol value is the ticker symbol or part of the company's name.
              required:
                - symbol
      responses:
        '200':
          description: An array of objects detailing contract information.
          content: 
            application/json:
              schema:
                type: array
                uniqueItems: true
                items:
                  $ref: '#/components/schemas/secdefSearch'
  
  # FA Allocation Management
  /iserver/account/allocation/group:
    get:
      tags:
        - FA Allocation Management
      summary: List All Allocation Groups
      description: Retrieves a list of all of the advisor’s allocation groups. This describes the name of the allocation group, number of subaccounts within the group, and the method in use for the group.
      responses:
        '200':
          description: Returns the "data" array, which contains all allocation groups under the advisor account.
          content: 
            application/json:
              schema:
                properties:
                  data:
                    type: array
                    items:
                      properties:
                        allocation_method:
                          type: string
                          example: "N"
                          description: Uses the Allocation Method Code to represent which method is implemented.
                        size:
                          type: integer
                          example: 10
                          description: Represents the total number of sub-accounts within the group.
                        name: 
                          type: string
                          example: Group_1_NetLiq
                          description: The name set for the given allocation group.
    put:
      tags:
        - FA Allocation Management
      summary: Modify Allocation Group
      description: Modify an existing allocation group.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Group_1_NetLiq
                  description: Name used to refer to your allocation group. If prev_name is specified, this will become the new name of the group.
                prev_name:
                  type: string
                  example: Group_0_NetLiq
                  description: Can be used to rename a group. Using this field will recognize the previous name, while the "name" filed will mark the updated name.
                accounts:
                  type: array
                  description: An array of accounts that should be held in the allocation group and, if using a User-specified allocaiton method, the value correlated to the allocation.
                  items:
                    properties:
                      name:
                        type: string
                        description: The accountId of a given sub-account.
                        example: "U1234567"
                      amount:
                        type: integer
                        description: The total distribution value for each sub-account for user-defined allocation methods.
                        example: 10
                    required:
                      - name
                      - amount
                default_method:
                  type: string
                  default: "N"
                  enum: [A, E, "N", C, P, R, S]
                  description: >
                    IB-computed allocation methods:
                      * `A` - Available Equity
                      * `E` - Equal
                      * `N` - Net Liquidation Value
                    
                    User-specified allocation methods:
                      * `C` - Cash Quantity
                      * `P` - Percentage
                      * `R` - Ratios
                      * `S` - Shares
              required:
                - name
                - accounts
                - default_method
            examples:
              Shares:
                value: 
                  name: Group_1_Shares
                  previous_name: Group_0_Shares
                  amount: 15
                  default_method: "S"
                  accounts:
                    name: "U456789"
                    amount: 3
              NetLiq:
                value: 
                  name: Group_1_NetLiq
                  # amount: 15
                  default_method: "N"
              EqualQty:
                value: 
                  name: Group_1_Equal
                  # amount: 15
                  default_method: "E"
      responses:
        '200':
          description: Returns a confirmation that the modification was successful.
          content: 
            application/json:
              schema:
                properties:
                  success:
                    type: boolean

    post:
      tags:
        - FA Allocation Management
      summary: Add Allocation Group
      description: Add a new allocation group. This group can be used to trade in place of the {accountId} for the /iserver/account/{accountId}/orders endpoint.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Group_1_NetLiq
                  description: Name used to refer to your allocation group. If prev_name is specified, this will become the new name of the group.
                accounts:
                  type: array
                  description: An array of accounts that should be held in the allocation group and, if using a User-specified allocaiton method, the value correlated to the allocation.
                  items:
                    properties:
                      name:
                        type: string
                        description: The accountId of a given sub-account.
                        example: "U1234567"
                      amount:
                        type: integer
                        description: The total distribution value for each sub-account for user-defined allocation methods.
                        example: 10
                    required:
                      - name
                      - amount
                default_method:
                  type: string
                  default: "N"
                  enum: [A, E, "N", C, P, R, S]
                  description: >
                    IB-computed allocation methods:
                      * `A` - Available Equity
                      * `E` - Equal
                      * `N` - Net Liquidation Value
                    
                    User-specified allocation methods:
                      * `C` - Cash Quantity
                      * `P` - Percentage
                      * `R` - Ratios
                      * `S` - Shares
              required:
                - name
                - accounts
                - default_method
            examples:
              Shares:
                value: 
                  name: Group_1_Shares
                  default_method: "S"
                  accounts:
                      - name: "U456789"
                        amount: 4
                      - name: "U123456"
                        amount: 1
              NetLiq:
                value: 
                  name: Group_1_NetLiq
                  default_method: "N"
                  accounts:
                      - name: "U456789"
                      - name: "U123456"
              EqualQty:
                value: 
                  name: Group_1_Equal
                  default_method: "E"
                  accounts:
                      - name: "U456789"
                      - name: "U123456"
      responses:
        '200':
          description: Returns a confirmation that the modification was successful.
          content: 
            application/json:
              schema:
                properties:
                  success:
                    type: boolean

  # Watchlists
  /iserver/watchlist:
    post:
      tags: 
        - Watchlists
      summary: Create a watchlist to monitor a set of instruments.
      description: Create a named watchlist by submitting a set of conids. 
      requestBody:
        description: Watchlist contents.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  description: Must be a number, digits 0-9 only. Must be unique relative to other watchlist IDs.
                name:
                  type: string
                  description: Arbitrary human-readable name to be displayed in TWS and Client Portal.
                rows:
                  type: array
                  description: Array of JSON objects corresponding to watchlist rows, one per instruments.
                  uniqueItems: true
                  items:
                    properties:
                      C:
                        type: string
                        description: Conid as string. 
              required:
                - id
                - name
                - rows
      responses:
        '200':
          description: Watchlist creation successful.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: The submitted watchlist ID.
                  hash:
                    type: string
                    description: IB's internal hash of the submitted watchlist.
                  name:
                    type: string
                    description: The submitted human-readable watchlist name.
                  readOnly:
                    type: boolean
                    description: Indicates whether watchlist is write-restricted. User-created watchlists will always show false.
                  instruments:
                    type: array
                    description: Array will always be empty. Contents can be queried via GET /iserver/watchlist?id=
                    items:
                      type: string
                    maxItems: 0
  
components:
  schemas:
    secdefSearch:
      properties:
        conid:
          type: string
          example: 265598
          description: Contract identifier for the unique contract.
        companyHeader:
          type: string
          example: APPLE INC - NASDAQ
          description: Company Name - Exchange
        companyName:
          type: string
          example: APPLE INC
          description: Formal name of the company.
        symbol:
          type: string
          example: AAPL
          description: Underlying ticker symbol.
        description:
          type: string
          example: NASDAQ
          description: Primary exchange of the contract
        restricted:
          type: boolean
          description: Returns if the contract is available for trading.
        fop:
          type: string
          example: 20240105;20240112;20240119;20240126
          description: Returns a string of dates, separated by semicolons.
        opt:
          type: string
          example: 20240105;20240112;20240119;20240126
          description: Returns a string of dates, separated by semicolons.
        war:
          type: string
          example: 20240105;20240112;20240119;20240126
          description: Returns a string of dates, separated by semicolons.
        sections:
          type: array
          uniqueItems: true
          items:
            type: object
            properties:
              secType:
                type: string
                example: OPT
              months:
                type: string
                example: NOV23;DEC23;JAN24
              exchange:
                type: string
                example: SMART;AMEX;BATS;BOX

